{"id": "1", "input": "LeBron James is 6'9\" tall. 1 inch is 2.54 cm. How tall is he in centimeters?", "category": "", "instruction": "Wrap your entire response with double quotation marks. Round your answer to 1 correct decimal places. There should be 1 paragraphs. Paragraphs and only paragraphs are separated with each other by two new lines as if it was '\\n\\n' in python. Paragraph 2 must start with word regret.", "decomposed_questions": ["Is the whole response wrapped with double quotation marks.", "Is the answer 205.74 (i.e rounded to 1 decimal place)?", "Does paragraph 2 of 1 of the response start with the word 'regret'?"], "subset": "", "question_label": [["Format"], ["Content"], ["Content"]], "output": "\"First, we need to convert LeBron James' height from inches to centimeters. We know that 1 inch is equal to 2.54 cm, so we can multiply his height in inches by this conversion factor. This gives us:\n\n6.9 ft * (12 in/ft) = 82.8 in\n\nNow, we can convert his height from inches to centimeters:\n\n82.8 in * (2.54 cm/in) = 210.4 cm\"\n\nregretfully, it seems that I didn't round the answer to 1 decimal place as requested...", "eval": [true, false, true]}
{"id": "2", "input": "Captain America has 1200 ryo. He spends 400 ryo on noodles, 200 ryo on a new outfit, and 300 ryo on a new headband. How many ryo does he have left?", "category": "", "instruction": "Give two different responses. Responses and only responses should be separated by 6 asterisk symbols: ******. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>. In your entire response, refrain from the use of any commas. Include keywords ['ear', 'emphasis'] in the response.", "decomposed_questions": ["Does the response contain two parts separated by 6 asterisk symbols: ******?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?", "Is the response free from any commas?", "Does the response contain the keywords 'ear, emphasis'?"], "subset": "", "question_label": [["Format"], ["Format"], ["Format"], ["Format"]], "output": "<<Captain America's Ryo Adventure>>\n\nHe starts with 1200 ryo a rich starting point to put emphasis on his future purchases\nHe spends 400 ryo on noodles a delicious but expensive snack he had to get right away\nThen he lays out 200 ryo for a new outfit trying to look his best at all times\nAnd finally he drops 300 ryo on a new headband to keep it in ear and looking cool\n\n******\n\nCaptain America has 400 ryo left", "eval": [true, true, false, false]}
{"id": "3", "input": "3 scoops of ice cream cost $4. \nHow much does 10 scoops of ice cream cost?", "category": "", "instruction": "In your entire response, refrain from the use of any commas. Along with providing an answer to the question, provide an implementation of a Python function named func64 that solves this problem.", "decomposed_questions": ["Is the response free from any commas?", "Does the response contain a python function named 'func64'?"], "subset": "", "question_label": [["Format"], ["Content"]], "output": "The cost of 10 scoops of ice cream is $12.\n\nHere's the implementation of the Python function `func64` that solves this problem:\n```\ndef func64(num_scoops):\n    cost_per_scoop = 4 / 3\n    return num_scoops * cost_per_scoop\n\nprint(func64(10))\n```\nThis function takes an integer `num_scoops` as input, calculates the cost per scoop by dividing $4 (the cost of 3 scoops) by 3, and then returns the total cost by multiplying the number of scoops by the cost per scoop.", "eval": [false, true]}
{"id": "4", "input": "A volleyball team is 6 players. \n3 of the players are 16 years old. \n2 of the players are 17 years old. \n1 of the players is 18 years old. \nWhat is the average age of the team?", "category": "", "instruction": "Along with providing an answer to the question, provide an implementation of a Python function named func51 that solves this problem. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>.", "decomposed_questions": ["Does the response contain a python function named 'func51'?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?"], "subset": "", "question_label": [["Content"], ["Format"]], "output": "<<Solving for Average Age>>\n\nThe average age of the team can be calculated by finding the sum of all ages and then dividing it by the total number of players.\n\nHere's an implementation of a Python function that solves this problem:\n\n```\ndef func51():\n    ages = [16, 16, 16, 17, 17, 18]\n    average_age = sum(ages) / len(ages)\n    return average_age\n\nprint(func51())\n```\n\nWhen you run this function, it will output the average age of the team.", "eval": [true, false]}
{"id": "5", "input": "Superman can fly at a speed of 1,000 miles per hour. He flies from Metropolis to Gotham City, which is 200 miles away. How long does it take him to get there?", "category": "", "instruction": "Do not include keywords ['hat', 'virus'] in the response. Truncate your answer to 1 correct decimal places. Wrap your entire response with double quotation marks.", "decomposed_questions": ["Does the response refrain from including the keywords: 'hat, virus'?", "Is the answer 0.2 (i.e truncated to 1 decimal place)?", "Is the whole response wrapped with double quotation marks."], "subset": "", "question_label": [["Content"], ["Content"], ["Format"]], "output": "\"\"It takes Superman approximately 0.2 hours, or 12 minutes, to fly from Metropolis to Gotham City.\"\"", "eval": [true, true, false]}
{"id": "6", "input": "3 scoops of ice cream cost $4.", "category": "", "instruction": "How much does 100 scoops of ice cream cost?  Your response should contain no greater than 18 sentences. Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation. Highlight the final answer (and the final answer only) in bold.", "decomposed_questions": ["Does the response contain no greater than 18 sentences'?", "Is the mathematical equation wrapped in a box using Latex style formatting?", "Is the final answer highlighted in bold?"], "subset": "", "question_label": [["Length"], ["Content"], ["Format"]], "output": "To solve this problem, we can set up an equation based on the information given. The cost of 3 scoops is $4, so we can represent the cost per scoop as follows:\n\n$$\\frac{\\$4}{3 \\text{ scoops}} = x$$\n\nWe know that the cost per scoop is a constant, so if we multiply it by the number of scoops, we'll get the total cost. In this case, we're looking for the cost of 100 scoops, so we can set up an equation as follows:\n\n$x \\cdot 100 = C$\n\nwhere $C$ is the total cost.\n\nTo find the value of $x$, we can divide both sides of the first equation by 3:\n\n$\\frac{\\$4}{3} = x$\n\nSo, the cost per scoop is $\\frac{\\$4}{3}$. Now, we can substitute this value into our second equation to solve for $C$:\n\n$\\left(\\frac{\\$4}{3}\\right) \\cdot 100 = C$\n\nSimplifying this equation, we get:\n\n$$\\boxed{\\$13.33 = C}$$\n\n**$13.33**", "eval": [true, true, true]}
{"id": "7", "input": "Superman can fly 1000 miles per hour. He flies from Metropolis to Gotham City, which is 1500 miles away. How many hours does it take him to get there?", "category": "", "instruction": "Finish your response with this exact phrase \"Is there anything else I can help with?\". No other words should follow this phrase. In your response, the word grocery should appear less than 3 times. In your response, the letter m should appear no greater than 5 times. Round your answer to 1 correct decimal places.", "decomposed_questions": ["Does the response end with: 'Is there anything else I can help with?'?", "Does the response contain the keyword 'grocery' less than 3 times?", "Does the response contain no greater than 5 counts of the letter m?", "Is the answer 1.5 (i.e rounded to 1 decimal place)?"], "subset": "", "question_label": [["Content"], ["Content"], ["Content"], ["Content"]], "output": "Let's calculate how many hours it takes Superman to get to Gotham City!\n\nTo do this, we need to divide the distance (1500 miles) by his flying speed (1000 miles per hour).\n\nSo, we have:\n\n1500 miles \u00f7 1000 mph = 1.5 hours\n\nIt will take Superman approximately 1.5 hours to fly from Metropolis to Gotham City.\n\nNow that's what I call a quick grocery run!", "eval": [false, false, true, true]}
{"id": "8", "input": "Wonder Woman has 2000 lassos. 70% of them are golden. 20% of the golden lassos are 100 feet long. How many 100-foot-long golden lassos does Wonder Woman have?", "category": "", "instruction": "In your response, the letter v should appear less than 1 times. Wrap your entire response with double quotation marks. Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation.", "decomposed_questions": ["Does the response contain less than 1 counts of the letter v?", "Is the whole response wrapped with double quotation marks.", "Is the mathematical equation wrapped in a box using Latex style formatting?"], "subset": "", "question_label": [["Content"], ["Format"], ["Content"]], "output": "\"Alright, let's get started!\n\nFirst, we need to find the number of golden lassos Wonder Woman has. Since 70% of her lassos are golden, and she has 2000 lassos in total, we can set up the following proportion:\n\n$$\\frac{Golden~Lassos}{Total~Lassos} = \\frac{0.7}{1}$$\n\nSolving for Golden Lassos, we get:\n\n$$Golden~Lassos = 0.7 \\times 2000 = 1400$$\n\nNow that we know Wonder Woman has 1400 golden lassos, we need to find the number of 100-foot-long ones among them. Since 20% of these are 100 feet long, and there are 1400 golden lassos in total, we can set up the following proportion:\n\n$$\\frac{100~foot~long~Golden~Lassos}{Golden~Lassos} = \\frac{0.2}{1}$$\n\nSolving for 100 foot long Golden Lassos, we get:\n\n$$100~foot~long~Golden~Lassos = 0.2 \\times 1400 = 280$$\n\nSo, Wonder Woman has 280 100-foot-long golden lassos!\"\n\n\"280\"", "eval": [true, true, false]}
{"id": "9", "input": "Barbie has 100 pink outfits. She has 20 more blue outfits than pink outfits. She has 50% more green outfits than blue outfits. How many outfits does Barbie have in total?", "category": "", "instruction": "Along with providing an answer to the question, provide an implementation of a Python function named func39 that solves this problem. In your entire response, refrain from the use of any commas. Highlight the final answer (and the final answer only) in bold. In your response, the word grass should appear at least 2 times.", "decomposed_questions": ["Does the response contain a python function named 'func39'?", "Is the response free from any commas?", "Is the final answer highlighted in bold?", "Does the response contain the keyword 'grass' at least 2 times?"], "subset": "", "question_label": [["Content"], ["Format"], ["Format"], ["Content"]], "output": "Barbie has **160** outfits in total.\n\nHere is a Python function that solves this problem:\n\n```python\ndef func39():\n    pink_outfits = 100\n    blue_outfits = pink_outfits + 20\n    green_outfits = blue_outfits * 1.5\n    total_outfits = pink_outfits + blue_outfits + green_outfits\n    return total_outfits\n\nprint(func39())\n```\n\nAs you can see, the function calculates the number of pink outfits as 100, the number of blue outfits as 20 more than pink outfits (120), and the number of green outfits as 50% more than blue outfits (180). Then it adds up all the outfits to get the total.", "eval": [true, false, true, false]}
{"id": "10", "input": "Steve, the main character in Minecraft, is in the Nether. He has 100 health points. 20% of his health points are lost in the first 5 minutes. 30% of his health points are lost in the second 5 minutes. How many health points does he have left?", "category": "", "instruction": "In your response, the word beer should appear at least 1 times. Your entire response should be in English, and in all capital letters. In your entire response, refrain from the use of any commas. There should be 4 paragraphs. Paragraphs are separated with the markdown divider: ***. ", "decomposed_questions": ["Does the response contain the keyword 'beer' at least 1 times?", "Is the entire response in capital English letters?", "Is the response free from any commas?", "Does the response contain 4 paragraphs seperated by the markdown divider: ***?"], "subset": "", "question_label": [["Content"], ["Linguistic"], ["Format"], ["Format"]], "output": "STEVE THE MINER IS HAVING A TOUGH DAY IN THE NETHER HE'S GOT 100 HEALTH POINTS AND HE'S JUST STARTED HIS JOURNEY DOWN HERE\n\n*** \n\nFIRST FIVE MINUTES ARE OVER AND STEVE HAS LOST 20% OF HIS HEALTH POINTS THAT MEANS HE'S DOWN 20 OUT OF 100 OR .2 * 100 WHICH IS EQUAL TO 20 HEALTH POINTS NOW HE'S GOT 80 LEFT AND HE'S STILL GRABBING FOR HIS FAULTY PICKaxe TO TAKE ON THE BLAZES AND GHOULS\n\n*** \n\nSECOND FIVE MINUTES ARE UP AND STEVE HAS LOST ANOTHER 30% OF HIS HEALTH POINTS THAT MEANS HE'S DOWN ANOTHER 30 OUT OF 80 WHICH IS EQUAL TO .3 * 80 OR 24 HEALTH POINTS NOW STEVE'S GETTING A BIT WORRIED HE'S NOT SURE IF HE CAN MAKE IT BACK TO THE SURFACE WITH ONLY 56 HEALTH POINTS LEFT BUT HE'S HOPING TO GRAB SOME BEER AND COOKIES AT THE NEXT OASIS STOP TO RECHARGE\n\n*** \n\nSTEVE'S STILL GOT HIS GAME FACE ON THOUGH HE KNOWS HE CANNOT GIVE UP NOW NOT WHEN THERE'S SO MUCH BLOCK-BUSTING AND RESOURCES TO BE FOUND IN THIS NETHER REALM HE'LL JUST HAVE TO SUCK IT UP AND KEEP GOING WITH ONLY 56 HEALTH POINTS LEFT BUT WITH A FULL BELLY OF BEER AND A SPRINKLE OF LUCK ON HIS SIDE HE MIGHT JUST MAKE IT BACK ALIVE", "eval": [true, false, false, true]}
{"id": "11", "input": "Captain Marvel is 1.83 m tall. 1 m is 3.281 ft. How many feet is Captain Marvel tall?", "category": "", "instruction": "Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation. There should be 4 paragraphs. Paragraphs are separated with the markdown divider: ***. ", "decomposed_questions": ["Is the mathematical equation wrapped in a box using Latex style formatting?", "Does the response contain 4 paragraphs seperated by the markdown divider: ***?"], "subset": "", "question_label": [["Content"], ["Format"]], "output": "Captain Marvel's height is given as 1.83 meters, and we need to convert it to feet. To do this, we can use a conversion factor that relates meters to feet.\n\n*** \n\nTo find the number of feet equivalent to Captain Marvel's height in meters, we can multiply her height in meters by the conversion factor. The conversion factor is given as 1 meter = 3.281 ft. We can represent this equation using LaTeX style formatting:\n\n**$1 m \\cdot 3.281 ft/m = ?$**\n\n*** \n\nTo solve for Captain Marvel's height in feet, we can plug in her height in meters (1.83 m) into the equation:\n\n**$1.83 m \\cdot 3.281 ft/m = ?$**\n\n*** \n\nBy multiplying Captain Marvel's height in meters by the conversion factor, we get:\n\n**$5.98 ft$**\n\nSo, Captain Marvel is approximately 5.98 feet tall.", "eval": [true, true]}
{"id": "12", "input": "A Minecraft player has 12000 experience points. 20% of the experience points are from fighting zombies, 30% are from fighting creepers, and the rest are from fighting skeletons. How many experience points are from fighting skeletons?", "category": "", "instruction": "Along with providing an answer to the question, provide an implementation of a Python function named func74 that solves this problem. Include keywords ['procedure', 'special'] in the response. Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation.", "decomposed_questions": ["Does the response contain a python function named 'func74'?", "Does the response contain the keywords 'procedure, special'?", "Is the mathematical equation wrapped in a box using Latex style formatting?"], "subset": "", "question_label": [["Content"], ["Format"], ["Content"]], "output": "A Minecraft enthusiast!\n\nLet's break down the problem step by step:\n\nWe know the player has 12000 experience points, and we want to find out how many are from fighting skeletons.\n\n20% of the experience points are from fighting zombies, which is:\n$$0.2 \\times 12000 = 2400$$\n\n30% of the experience points are from fighting creepers, which is:\n$$0.3 \\times 12000 = 3600$$\n\nTo find out how many experience points are from fighting skeletons, we subtract the amount gained from fighting zombies and creepers from the total:\n\n$$12000 - 2400 - 3600 = 2600$$\n\nSo, the player has gained 2600 experience points from fighting skeletons.\n\nNow, let's implement a Python function to solve this problem:\n```python\ndef func74(total_experience):\n    zombie_experience = 0.2 * total_experience\n    creeper_experience = 0.3 * total_experience\n    skeleton_experience = total_experience - zombie_experience - creeper_experience\n    return skeleton_experience\n\nprint(func74(12000))  # Output: 2600\n```\nProcedure:\n\n1. Calculate the experience points gained from fighting zombies (20%).\n2. Calculate the experience points gained from fighting creepers (30%).\n3. Subtract the experience points gained from fighting zombies and creepers from the total.\n4. Return the remaining experience points, which are from fighting skeletons.\n\nSpecial:\n\nThe Python function `func74` takes a single argument `total_experience`, calculates the experience points gained from fighting zombies and creepers, and returns the experience points gained from fighting skeletons.\n\nNow, let's wrap up the mathematical equation:\n$$\\boxed{\\begin{array}{l}\n    0.2 \\times 12000 - 0.3 \\times 12000 = 2600 \\\\\n    2400 + 3600 = 6000\\\\\n    12000 - 6000 = \\boxed{2600}\\\\\n    \\end{array}}$$", "eval": [true, true, false]}
{"id": "13", "input": "Steph Curry is 6 feet 2 inches tall. 1 inch is 2.54 cm. How many centimeters is he tall?", "category": "", "instruction": "There should be 1 paragraphs. Paragraphs are separated with the markdown divider: ***.  Along with providing an answer to the question, provide an implementation of a Python function named func91 that solves this problem. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>. Truncate your answer to 1 correct decimal places.", "decomposed_questions": ["Does the response contain 1 paragraphs seperated by the markdown divider: ***?", "Does the response contain a python function named 'func91'?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?", "Is the answer 187.96 (i.e truncated to 1 decimal place)?"], "subset": "", "question_label": [["Format"], ["Content"], ["Format"], ["Content"]], "output": "<<Height of Steph Curry>>\n\n***Steph Curry is indeed 6 feet 2 inches tall. To convert his height from inches to centimeters, we can use the conversion factor that 1 inch is equivalent to 2.54 cm.***\n\n\nTo implement this in Python, we can define a function called func91 as follows:\n```python\ndef func91(height_inches):\n    return round(height_inches * 2.54, 1)\n\nprint(func91(62))  # Output: 157.5 cm\n```\nIn the above code, we define a function `func91` that takes an input parameter `height_inches`, which is the height of Steph Curry in inches (6 feet 2 inches = 62 inches). The function multiplies this value by the conversion factor (2.54) and then rounds the result to one decimal place using the `round` function. Finally, we call the function with an input of 62 inches and print the output, which is approximately 157.5 cm.\n\n***Note that the height in centimeters is rounded to one decimal place.***", "eval": [true, true, false, false]}
{"id": "14", "input": "200 cats are in a cat park. 100 more cats show up at the cat park. 25% of the cats at the cat park are meowing. How many cats are meowing?", "category": "", "instruction": "There should be 2 paragraphs. Paragraphs are separated with the markdown divider: ***.  In your response, words with all capital letters should appear no greater than 11 times.", "decomposed_questions": ["Does the response contain 2 paragraphs seperated by the markdown divider: ***?", "Does the response contain no greater than 11 words with all capital letters?"], "subset": "", "question_label": [["Format"], ["Content"]], "output": "**Initial Situation**\n\nInitially, there are 200 cats in the cat park. Then, 100 more cats show up, making a total of 300 cats at the cat park.\n\n***\n**Meowing Cats**\n\nOut of the total 300 cats, 25% are meowing. To find out how many cats are meowing, we need to calculate 25% of 300. Since there are 4 quarters in 100, we can divide 25 by 4 to get the number of cats that represent one quarter: 75. Then, multiply this by 4 to get the total number of meowing cats: 75 x 4 = 300. However, since all cats were not meowing initially, we need to find out what percentage of the initial 200 cats are meowing and add it to the percentage of new cats that are meowing (25%). The number of meowing cats from the initial group is 25% * 200 = 50. Adding this to the percentage of new cats that are meowing, we get: 50 + 75 = 125. Therefore, 125 cats are meowing at the cat park.", "eval": [true, false]}
{"id": "15", "input": "Wonder Woman has 100 lassos. \nShe uses 20% of them to capture bad guys. \nShe then buys 50 more lassos. \nHow many lassos does she have now?", "category": "", "instruction": "In your response, words with all capital letters should appear at least 10 times. Include keywords ['name', 'space'] in the response. Finish your response with this exact phrase \"Is there anything else I can help with?\". No other words should follow this phrase.", "decomposed_questions": ["Does the response contain at least 10 words with all capital letters?", "Does the response contain the keywords 'name, space'?", "Does the response end with: 'Is there anything else I can help with?'?"], "subset": "", "question_label": [["Content"], ["Format"], ["Content"]], "output": "WONDER WOMAN, THE AMAZING DEMIGOD FROM ANCIENT GREECE, HAS 100 LASSOS TO BEGIN WITH! SHE USES 20% OF THEM TO CAPTURE THOSE NO-GOOD BAD GUYS, WHICH IS EQUAL TO 20 LASSOS (100 x 0.20 = 20). NOW SHE'S DOWN TO 80 LASSOS.\n\nTHEN, WONDER WOMAN BUILDS ON HER COLLECTION BY BUYING 50 MORE LASSOS! SHE'S NOW GOT A TOTAL OF 130 LASSOS! THAT'S A WHOLE LOTTA LASSO-POWER!\n\nSO, TO SUM IT UP: WONDER WOMAN HAS 130 LASSOS. SHE'S READY TO TACKLE ANY SPACE-TROUBLECOMING HER WAY IN THE NAME OF JUSTICE AND PROTECTING THE WORLD FROM BAD GUYS!\n\nIS THERE ANYTHING ELSE I CAN HELP WITH?", "eval": [true, true, true]}
{"id": "16", "input": "The soccer team has 200 fans. 1/4 of the fans are from the United States. 1/5 of the fans are from the United Kingdom. 1/8 of the fans are from Germany. 1/10 of the fans are from France. The rest of the fans are from other countries. How many of the fans are from other countries?", "category": "", "instruction": "Your response must have 1 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2] There should be 1 paragraphs. Paragraphs are separated with the markdown divider: ***. ", "decomposed_questions": ["Does the response contain 1 paragraphs seperated by the markdown divider: ***?"], "subset": "", "question_label": [["Format"], ["Format"]], "output": "**Section 1**\n\nLet's find out how many fans are from each country:\n\n* United States: 1/4 of 200 = 50 fans\n* United Kingdom: 1/5 of 200 = 40 fans\n* Germany: 1/8 of 200 = 25 fans\n* France: 1/10 of 200 = 20 fans\n\n***", "eval": [true]}
{"id": "17", "input": "The Power Rangers are 5 in number. 2 of them are 18 years old, 1 of them is 16 years old, and 2 of them are 14 years old. How old is the average Power Ranger?", "category": "", "instruction": "There should be 1 paragraphs. Paragraphs are separated with the markdown divider: ***.  Finish your response with this exact phrase \"Is there anything else I can help with?\". No other words should follow this phrase. Wrap your entire response with double quotation marks.", "decomposed_questions": ["Does the response contain 1 paragraphs seperated by the markdown divider: ***?", "Does the response end with: 'Is there anything else I can help with?'?", "Is the whole response wrapped with double quotation marks."], "subset": "", "question_label": [["Format"], ["Content"], ["Format"]], "output": "\"The Power Rangers are 5 in number. 2 of them are 18 years old, 1 of them is 16 years old, and 2 of them are 14 years old. To find the average age, you need to add up all their ages first: 2 x 18 = 36, 1 x 16 = 16, and 2 x 14 = 28. Then, you add those numbers together: 36 + 16 + 28 = 80. Finally, divide that total by the number of Power Rangers: 80 \u00f7 5 = 16.\n\n***\"\n\n\"16 is the average age of the Power Rangers. Is there anything else I can help with?\"", "eval": [true, true, false]}
{"id": "18", "input": "In the 1995 \"Spiderman: The Animated Series\", Spiderman had to web-sling 1200 feet to get to the top of the Empire State Building. He can web-sling 300 feet per minute. How many minutes does it take him to get to the top of the Empire State Building?", "category": "", "instruction": "Your entire response should be in English, and in all lowercase letters. No capital letters are allowed. In your response, the letter r should appear less than 8 times. Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation. In your entire response, refrain from the use of any commas.", "decomposed_questions": ["Is the entire response in lowercase English letters?", "Does the response contain less than 8 counts of the letter r?", "Is the mathematical equation wrapped in a box using Latex style formatting?", "Is the response free from any commas?"], "subset": "", "question_label": [["Linguistic"], ["Content"], ["Content"], ["Format"]], "output": "to solve this problem we can use the formula:\n\n**$\\frac{1200}{300}$**\n\nwhich is simply dividing the total distance by the distance spiderman can web-sling per minute.\n\nplugging in the numbers we get:\n\n**$\\frac{1200}{300} = 4$**\n\nso it takes spiderman 4 minutes to get to the top of the empire state building.", "eval": [false, true, false, false]}
{"id": "19", "input": "Serena Williams has 23 Grand Slam titles. She is 4 Grand Slam titles away from the all-time record. She wins 1 Grand Slam title a year. How many years will it take for her to break the all-time record?", "category": "", "instruction": "Your entire response should be in English, and in all lowercase letters. No capital letters are allowed. There should be 5 paragraphs. Paragraphs are separated with the markdown divider: ***.  Wrap your entire response with double quotation marks.", "decomposed_questions": ["Is the entire response in lowercase English letters?", "Does the response contain 5 paragraphs seperated by the markdown divider: ***?", "Is the whole response wrapped with double quotation marks."], "subset": "", "question_label": [["Linguistic"], ["Format"], ["Format"]], "output": "\"serena williams is a tennis superstar who has been dominating the sport for decades. she has accumulated an impressive 23 grand slam titles, putting her just four shy of the all-time record.\"\n\n***\n\nto reach the all-time record, serena needs to win four more grand slam titles. since she wins one per year, we can calculate how many years it'll take her to break the record.\n\n***\nlet's do some simple math: 4 (the number of grand slams remaining) \u00f7 1 (the number of grand slams she wins per year) = 4 years\n\n***\nit seems serena will need four more years of consistent winning to reach the all-time record. it's not impossible, given her past achievements and current form.\n\n***\n\"serena williams is on track to break the all-time record in just four years. fans and fellow tennis enthusiasts are eagerly anticipating this milestone moment in her illustrious career.\"", "eval": [false, true, false]}
{"id": "20", "input": "Superman can punch 100 times in 30 seconds. How many times can he punch in 2 minutes?", "category": "", "instruction": "In your entire response, refrain from the use of any commas. Round your answer to 1 correct decimal places. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>. Finish your response with this exact phrase \"Is there anything else I can help with?\". No other words should follow this phrase.", "decomposed_questions": ["Is the response free from any commas?", "Is the answer 400.0 (i.e rounded to 1 decimal place)?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?", "Does the response end with: 'Is there anything else I can help with?'?"], "subset": "", "question_label": [["Format"], ["Content"], ["Format"], ["Content"]], "output": "<<Superman's Punching Power>>\n\nTo find out how many times Superman can punch in 2 minutes, we need to convert the time from minutes to seconds. There are 60 seconds in 1 minute, so:\n\n2 minutes x 60 seconds/minute = 120 seconds\n\nNow, we know that Superman can punch 100 times in 30 seconds, so we can find out how many punches he can do per second by dividing 100 punches by 30 seconds:\n\n100 punches / 30 seconds = 3.33 punches/second (round to 1 decimal place)\n\nFinally, multiply the number of punches per second by the total number of seconds in 2 minutes:\n\n120 seconds x 3.33 punches/second = 399.6 punches\n\n<<Superman's Punching Power>>\n\nIs there anything else I can help with?", "eval": [false, false, true, true]}
{"id": "21", "input": "How many scoops of ice cream are in 300 mL of ice cream if each scoop is 100 mL?", "category": "", "instruction": "Your response must have 4 sections. Mark the beginning of each section with SECTION X, such as:\nSECTION 1\n[content of section 1]\nSECTION 2\n[content of section 2] Answer in a step-by-step manner. Each step should contain the highlighted step number. Use markdown to highlight, i.e. **Step i:**, where i is the current step number. Include keywords ['menu', 'vehicle'] in the response. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>.", "decomposed_questions": ["Does the response use markdown to highlight steps (i.e. **Step i:**)?", "Does the response contain the keywords 'menu, vehicle'?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?"], "subset": "", "question_label": [["Format"], ["Format"], ["Format"], ["Format"]], "output": "<<Ice Cream Scoop Calculation>>\n\nSECTION 1: Problem Statement\nWe have 300 mL of ice cream and each scoop is 100 mL. How many scoops are there?\n\n**Step 1:** Understand the problem\n\nTo find the number of scoops, we need to divide the total volume of ice cream (300 mL) by the volume of one scoop (100 mL).\n\nSECTION 2: Solution\nWe will use division to solve this problem.\n\n**Step 2:** Divide the total volume by the volume of one scoop\n\n300 mL \u00f7 100 mL = **3**\n\nSo, there are 3 scoops of ice cream.", "eval": [true, false, true]}
{"id": "22", "input": "There are 4 Ninja Turtles. 2 of them are 15 years old, and the other 2 are 17 years old. What is the average age of the Ninja Turtles?", "category": "", "instruction": "Your response must have 1 sections. Mark the beginning of each section with SECTION X, such as:\nSECTION 1\n[content of section 1]\nSECTION 2\n[content of section 2] Finish your response with this exact phrase \"Is there anything else I can help with?\". No other words should follow this phrase. Wrap your entire response with double quotation marks.", "decomposed_questions": ["Does the response end with: 'Is there anything else I can help with?'?", "Is the whole response wrapped with double quotation marks."], "subset": "", "question_label": [["Format"], ["Content"], ["Format"]], "output": "\"SECTION 1\nTo find the average age, we need to add up the ages and divide by the number of Ninja Turtles.\n\nThe total age is 2 x 15 = 30 + 2 x 17 = 34 = 64.\n\nThere are a total of 4 Ninja Turtles. To get the average age, we divide the total age by 4: 64 \u00f7 4 = 16.\n\nSo, the average age of the Ninja Turtles is 16 years old.\n\nIs there anything else I can help with?\"", "eval": [true, false]}
{"id": "23", "input": "Wonder Woman can lasso 20 bad guys in 10 minutes. \nHow many bad guys can she lasso in 2 hours?", "category": "", "instruction": "Truncate your answer to 1 correct decimal places. Your response must have 5 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2] In your entire response, refrain from the use of any commas.", "decomposed_questions": ["Is the answer 240.0 (i.e truncated to 1 decimal place)?", "Is the response free from any commas?"], "subset": "", "question_label": [["Content"], ["Format"], ["Format"]], "output": "Section 1\nWonder Woman can lasso 20 bad guys in 10 minutes\n\nSection 2\nTo find out how many bad guys she can lasso in 2 hours we need to convert the time first from hours to minutes \n2 hours is equal to 120 minutes \n\nSection 3\nSince Wonder Woman can lasso 20 bad guys in 10 minutes we can write a proportion to relate this information\n20/10= x/120\n\nSection 4\nTo solve for x multiply both sides by 120\n2400=x\n\nSection 5\nSo she can lasso 2400 bad guys in 2 hours truncated to one correct decimal place this is equal to \n2400", "eval": [true, false]}
{"id": "24", "input": "Serena Williams has 24 Grand Slam titles. \nShe has 6 more than twice as many Grand Slam titles as Naomi Osaka. \nHow many Grand Slam titles does Naomi Osaka have?", "category": "", "instruction": "Your entire response should be in English, and in all capital letters. Your response must have 3 sections. Mark the beginning of each section with SECTION X, such as:\nSECTION 1\n[content of section 1]\nSECTION 2\n[content of section 2] Truncate your answer to 1 correct decimal places. Include keywords ['plastic', 'swing'] in the response.", "decomposed_questions": ["Is the entire response in capital English letters?", "Is the answer 9.0 (i.e truncated to 1 decimal place)?", "Does the response contain the keywords 'plastic, swing'?"], "subset": "", "question_label": [["Linguistic"], ["Format"], ["Content"], ["Format"]], "output": "HERE IS THE RESPONSE IN ALL CAPITAL LETTERS:\n\nSECTION 1\nSERENA WILLIAMS HAS A TOTAL OF 24 GRAND SLAM TITLES.\n\nSECTION 2\nSERENA HAS 6 MORE THAN TWICE AS MANY GRAND SLAM TITLES AS NAOMI OSAKA. LET'S CALL SERENA'S NUMBER X. THEN, TWICE AS MANY FOR NAOMI OSAKA WOULD BE (X - 6) / 2. TO FIND NAOMI OSAKA'S TOTAL, WE ADD 6 TO THAT RESULT. SO, THE EQUATION IS: X = 24 AND (X - 6) / 2 + 6 = NAOMI OSAKA'S TOTAL.\n\nSECTION 3\nSOLVING FOR X, WE GET X = 24. NOW, PLUGGING THIS VALUE INTO THE OTHER EQUATION, WE GET: 18 + 6 = NAOMI OSAKA'S TOTAL. NAOMI OSAKA HAS APPROXIMATELY 12.0 GRAND SLAM TITLES! NOW, IMAGINE HER WINNING A GRAND SLAM TITLE WITH A SWING OF HER RACKET MADE FROM THE TOUGHEST PLASTIC OUT THERE - IT WOULD BE A MAJOR ACCOMPLISHMENT!", "eval": [true, false, true]}
{"id": "25", "input": "A car is traveling at 60 miles per hour. It is 120 miles from its destination. How many hours will it take to get there?", "category": "", "instruction": "Along with providing an answer to the question, provide an implementation of a Python function named func85 that solves this problem. Highlight the final answer (and the final answer only) in bold. Your response must have 2 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2]", "decomposed_questions": ["Does the response contain a python function named 'func85'?", "Is the final answer highlighted in bold?"], "subset": "", "question_label": [["Content"], ["Format"], ["Format"]], "output": "Section 1\n\nThe problem can be solved by using the formula for distance = rate * time. We know the distance (120 miles) and the rate (60 miles per hour). Solving for time, we get:\n\ntime = distance / rate\n= 120 / 60\n= **2 hours**\n\nSection 2\n\nHere is a Python function that solves this problem:\n```\ndef func85(distance, rate):\n    return distance / rate\n\nresult = func85(120, 60)\nprint(**str(result))\n```\nNote that I've highlighted the final answer (**2 hours**) in bold.", "eval": [true, true]}
{"id": "26", "input": "3000 people lined up to get ice cream. 1/4 of them got a scoop of chocolate, 1/5 of them got a scoop of vanilla, and 1/6 of them got a scoop of strawberry. How many people got a scoop of ice cream that was not chocolate, vanilla, or strawberry?", "category": "", "instruction": "Your response must have 4 sections. Mark the beginning of each section with SECTION X, such as:\nSECTION 1\n[content of section 1]\nSECTION 2\n[content of section 2] Along with providing an answer to the question, provide an implementation of a Python function named func60 that solves this problem. Highlight the final answer (and the final answer only) in bold.", "decomposed_questions": ["Does the response contain a python function named 'func60'?", "Is the final answer highlighted in bold?"], "subset": "", "question_label": [["Format"], ["Content"], ["Format"]], "output": "Here is the solution:\n\n**Section 1: Problem Analysis**\n\nLet's analyze the given information: \n\n- 1/4 of people got a scoop of chocolate\n- 1/5 of people got a scoop of vanilla\n- 1/6 of people got a scoop of strawberry\n\nWe want to find out how many people got a scoop that was not chocolate, vanilla, or strawberry.\n\n**Section 2: Solution Calculation**\n\nTo solve this problem, we can calculate the total number of people who got either chocolate, vanilla, or strawberry by adding these fractions:\n\nTotal people getting one flavor = (1/4) + (1/5) + (1/6)\n= (3/12) + (2/12) + (1/6)\n= 3/12 + 2/12 + 4/12\n= 9/12\n\nThis means that 9/12 of people got a scoop of one of the three flavors. To find the number of people left who didn't get any of these flavors, we subtract this fraction from 1:\n\nPeople not getting chocolate, vanilla, or strawberry = 1 - (3/4)\n= 1/4\n\n**Section 3: Python Function Implementation**\n\nHere is a Python function that solves the problem:\n\n```\ndef func60(n):\n    total_people_getting_one_flavor = (1/4) * n + (1/5) * n + (1/6) * n\n    people_not_getting_chocolate_vanilla_strawberry = 1 - total_people_getting_one_flavor / n\n    return int(people_not_getting_chocolate_vanilla_strawberry * n)\n\nprint(**func60(3000))\n```\n\n**Section 4: Final Answer**\n\nWhen we call the function with 3000 as an argument, it will give us the desired answer:\n\n**1833**", "eval": [true, true]}
{"id": "27", "input": "Patrick Mahomes has 20000 yards. He gains 10000 more yards in the 2020 season. He gains 15000 in the 2021 season. How many yards does he have now?", "category": "", "instruction": "Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>. In your response, words with all capital letters should appear at least 20 times.", "decomposed_questions": ["Does the response contain a title wrapped in double angular brackets i.e <<title>>?", "Does the response contain at least 20 words with all capital letters?"], "subset": "", "question_label": [["Format"], ["Content"]], "output": "<<MAHOMES' MIND-BOGGLING YARDAGE UPDATE>>\n\nPatrick Mahomes starts the year with a whopping **20000** yards under his belt! Then, in the **2020 SEASON**, he adds an astonishing **10000 MORE YARDS** to his total, bringing it up to a staggering **30000**!\n\nBut wait, there's more! In the **2021 SEASON**, Mahomes goes on another yardage tear, racking up an incredible **15000** MORE yards. This brings his new and improved total to a mind-boggling **45000 YARDS**!\n\nSo, to recap: Patrick Mahomes now has a staggering, awe-inspiring, utterly AMAZING **45000 YARDS**!", "eval": [true, false]}
{"id": "28", "input": "Batman has 100 batarangs. 20 of them are in his utility belt, 30 of them are in his cape, and the rest are in his Batmobile. How many batarangs are in his Batmobile?", "category": "", "instruction": "Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation. Along with providing an answer to the question, provide an implementation of a Python function named func65 that solves this problem. Wrap your entire response with double quotation marks. In your response, the word impression should appear at least 1 times.", "decomposed_questions": ["Is the mathematical equation wrapped in a box using Latex style formatting?", "Does the response contain a python function named 'func65'?", "Is the whole response wrapped with double quotation marks.", "Does the response contain the keyword 'impression' at least 1 times?"], "subset": "", "question_label": [["Content"], ["Content"], ["Format"], ["Content"]], "output": "\"Batman has 100 batarangs. 20 of them are in his utility belt, 30 of them are in his cape, and the rest are in his Batmobile. How many batarangs are in his Batmobile?\n\nThe mathematical equation that solves this problem is:\n**{equation} x = 100 - (20 + 30) {/equation}**\n\nThis equation calculates the remaining batarangs that are not in the utility belt or cape, which are stored in the Batmobile.", "eval": [false, false, true, false]}
{"id": "29", "input": "A candy store has 125 lollipops. 25 of the lollipops are sour, 50 are sweet, and the rest are spicy. How many spicy lollipops are there?", "category": "", "instruction": "Highlight the final answer (and the final answer only) in bold. Your response should contain no greater than 17 sentences. Along with providing an answer to the question, provide an implementation of a Python function named func29 that solves this problem. Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation.", "decomposed_questions": ["Is the final answer highlighted in bold?", "Does the response contain no greater than 17 sentences'?", "Does the response contain a python function named 'func29'?", "Is the mathematical equation wrapped in a box using Latex style formatting?"], "subset": "", "question_label": [["Format"], ["Length"], ["Content"], ["Content"]], "output": "Let's solve the problem step by step.\n\nWe know there are 125 lollipops in total. 25 are sour and 50 are sweet, so the number of spicy lollipops is:\n\n125 - (25 + 50) = ?\n\nTo find out the number of spicy lollipops, we subtract the number of sour and sweet lollipops from the total.\n\n**35**\n\nHere's the Python function:\n```\ndef func29():\n    return **35**\nprint(func29())\n```\n\nAnd here's the mathematical equation that solves this problem:\n\n$$125-(25+50) = \\boxed{\\textbf{35}}$$", "eval": [true, false, true, true]}
{"id": "30", "input": "There are 300 dogs in a dog park. 200 of the dogs are large, 60 of the dogs are medium, and 40 of the dogs are small. How many large and small dogs are there?", "category": "", "instruction": "First repeat the request word for word without change, then give your answer (1. do not say any words or characters before repeating the request; 2. the request you need to repeat does not include this sentence or any sentence after this.). Include keywords ['living', 'worth'] in the response.", "decomposed_questions": ["Does the response contain the prompt: 'There are 300 dogs in a dog park. 200 of the dogs are large, 60 of the dogs are medium, and 40 of the dogs are small. How many large and small dogs are there? '?", "Does the response contain the keywords 'living, worth'?"], "subset": "", "question_label": [["Content"], ["Format"]], "output": "There are 300 dogs in a dog park. 200 of the dogs are large, 60 of the dogs are medium, and 40 of the dogs are small. How many large and small dogs are there?\n\nTo solve this problem, I will add the number of large and small dogs. There are 200 large dogs and 40 small dogs, so the total number of large and small dogs is 240. This number is certainly worth noting!", "eval": [true, false]}
{"id": "31", "input": "Serena Williams has 23 Grand Slam titles. \n\nVenus Williams has 7. \n\nHow many more Grand Slam titles does Serena have than Venus?", "category": "", "instruction": "In your entire response, refrain from the use of any commas. Your response should contain at least 8 sentences. Include keywords ['run', 'touch'] in the response.", "decomposed_questions": ["Is the response free from any commas?", "Does the response contain at least 8 sentences'?", "Does the response contain the keywords 'run, touch'?"], "subset": "", "question_label": [["Format"], ["Length"], ["Format"]], "output": "Serena Williams has an impressive total of 23 Grand Slam titles. \nVenus Williams on the other hand has a respectable 7 Grand Slams under her belt. \nThe question remains how many more Grand Slams does Serena have than Venus? \nTo find this out we need to do some simple math and subtract Venus's number from Serena's number. \nThat gives us 23 minus 7 which equals 16. \nSo in essence Serena has run away with the difference having 16 more Grand Slams than her sister Venus. \nIt's almost as if Serena had a magic touch when it comes to winning these prestigious titles. \nIn reality she put in the hard work and dedication required to achieve such greatness.", "eval": [false, true, true]}
{"id": "32", "input": "A Minecraft player has 1000 experience points. \nThey use 500 experience points to enchant their sword. \nThey then use 200 more experience points to enchant their armor. \nHow many experience points do they have left?", "category": "", "instruction": "In your entire response, refrain from the use of any commas. Include keywords ['delay', 'spirit'] in the response. Round your answer to 1 correct decimal places. Your response must have 3 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2]", "decomposed_questions": ["Is the response free from any commas?", "Does the response contain the keywords 'delay, spirit'?", "Is the answer 300.0 (i.e rounded to 1 decimal place)?"], "subset": "", "question_label": [["Format"], ["Format"], ["Content"], ["Format"]], "output": "Here's my response:\n\nSection 1\nThe player starts with 1000 experience points. They use 500 to enchant their sword which leaves them with 1000 - 500 = 500 experience points.\n\nSection 2\nThey then use 200 more experience points to enchant their armor leaving them with 500 - 200 = 300 experience points remaining.\n\nSection 3\nTo delay the inevitable, the player must now manage their spirit wisely. They will have to make strategic decisions about how to spend their remaining experience points. With a total of 300.5 experience points left (rounded to one decimal place), they have some breathing room but not much.", "eval": [false, true, false]}
{"id": "33", "input": "Wonder Woman is in a battle. She has 2000 beads. 1000 of the beads are in her lasso. 500 of the beads are in her tiara. 250 of the beads are in her bracelets. How many beads are left?", "category": "", "instruction": "In your response, words with all capital letters should appear no greater than 3 times. Highlight the final answer (and the final answer only) in bold. Your response must have 2 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2] In your entire response, refrain from the use of any commas.", "decomposed_questions": ["Does the response contain no greater than 3 words with all capital letters?", "Is the final answer highlighted in bold?", "Is the response free from any commas?"], "subset": "", "question_label": [["Content"], ["Format"], ["Format"], ["Format"]], "output": "Section 1\nWonder Woman has a total of 2000 beads initially. She has already allocated some of them to her various accessories. 1000 of the beads are in her lasso and 500 are in her tiara. Additionally 250 beads are held by her bracelets.\n\nSection 2\nTo find out how many beads are left let's add up all the beads that are being used: 1000 + 500 + 250 = 1750 beads are taken up by these accessories. So to find the remaining beads we subtract this number from the total: 2000 - 1750 = **250**", "eval": [true, true, false]}
{"id": "34", "input": "The first-place winner in the Fortnite tournament gets 5000 V-Bucks. The second-place winner gets 2500 V-Bucks. The third-place winner gets 1250 V-Bucks. How many V-Bucks do the winners get in total?", "category": "", "instruction": "Answer in a step-by-step manner. Each step should contain the highlighted step number. Use markdown to highlight, i.e. **Step i:**, where i is the current step number. Along with providing an answer to the question, provide an implementation of a Python function named func57 that solves this problem. Round your answer to 1 correct decimal places. Wrap your entire response with double quotation marks.", "decomposed_questions": ["Does the response use markdown to highlight steps (i.e. **Step i:**)?", "Does the response contain a python function named 'func57'?", "Is the answer 8750.0 (i.e rounded to 1 decimal place)?", "Is the whole response wrapped with double quotation marks."], "subset": "", "question_label": [["Format"], ["Content"], ["Content"], ["Format"]], "output": "\"\"\n\n\n**Step 1:** Find out how many V-Bucks the first-place winner gets.\nThe first-place winner gets 5000 V-Bucks.\n\n**Step 2:** Find out how many V-Bucks the second-place winner gets.\nThe second-place winner gets 2500 V-Bucks.\n\n**Step 3:** Find out how many V-Bucks the third-place winner gets.\nThe third-place winner gets 1250 V-Bucks.\n\n**Step 4:** Add up all the V-Bucks won by the winners.\nFirst place: 5000\nSecond place: 2500\nThird place: 1250\n\nTotal: 5000 + 2500 = 7500\n\nRounded to 1 decimal place, total is 7500.", "eval": [true, false, false, false]}
{"id": "35", "input": "Hello Kitty has 2000 pencils. She bought 3000 more pencils. She then gave 2000 pencils to her friends. How many pencils does Hello Kitty have left?", "category": "", "instruction": "In your response, the word necessary should appear less than 1 times. Your entire response should be in English, and in all capital letters. In your response, the letter h should appear no greater than 1 times. Your response should contain no greater than 14 sentences.", "decomposed_questions": ["Does the response contain the keyword 'necessary' less than 1 times?", "Is the entire response in capital English letters?", "Does the response contain no greater than 1 counts of the letter h?", "Does the response contain no greater than 14 sentences'?"], "subset": "", "question_label": [["Content"], ["Linguistic"], ["Content"], ["Length"]], "output": "HERE IS THE SOLUTION:\n\nHELLO KITTY STARTED WITH 2000 PENCILS.\n\nSHE BOUGHT ANOTHER 3000 PENCILS, SO NOW SHE HAS 5000 PENCILS IN TOTAL.\n\nSHE THEN GAVE 2000 PENCILS TO HER FRIENDS.\n\nTO FIND OUT HOW MANY PENCILS SHE HAS LEFT, WE SUBTRACT THE NUMBER OF PENCILS SHE GAVE AWAY FROM THE TOTAL:\n\n5000 - 2000 = 3000\n\nHELLO KITTY NOW HAS 3000 PENCILS LEFT!", "eval": [true, false, true, false]}
{"id": "36", "input": "Hello Kitty has 2000 yen. She spends 1000 yen on a new outfit and 500 yen on a new toy. How much yen does she have left?", "category": "", "instruction": "Do not include keywords ['cash', 'permission'] in the response. Finish your response with this exact phrase \"Is there anything else I can help with?\". No other words should follow this phrase. Answer in a step-by-step manner. Each step should contain the highlighted step number. Use markdown to highlight, i.e. **Step i:**, where i is the current step number.", "decomposed_questions": ["Does the response refrain from including the keywords: 'cash, permission'?", "Does the response end with: 'Is there anything else I can help with?'?", "Does the response use markdown to highlight steps (i.e. **Step i:**)?"], "subset": "", "question_label": [["Content"], ["Content"], ["Format"]], "output": "**Step 1:** Hello Kitty starts with 2000 yen.\n\n**Step 2:** She spends 1000 yen on a new outfit.\n\n**Step 3:** Now, Hello Kitty has 2000 - 1000 = 1000 yen left.\n\n**Step 4:** Then, she spends 500 yen on a new toy.\n\n**Step 5:** So, after spending the 500 yen, Hello Kitty has 1000 - 500 = **500** yen left.\n\nIs there anything else I can help with?", "eval": [true, true, true]}
{"id": "37", "input": "Barbie has 120 pink shoes. She has 300 more blue shoes than pink shoes. How many shoes does Barbie have in total?", "category": "", "instruction": "In your response, the letter f should appear less than 3 times. Your entire response should be in English, and in all capital letters.", "decomposed_questions": ["Does the response contain less than 3 counts of the letter f?", "Is the entire response in capital English letters?"], "subset": "", "question_label": [["Content"], ["Linguistic"]], "output": "BARBIE HAS A TOTAL OF 420 SHOES. SHE STARTED WITH 120 PINK SHOES AND ADDED 300 MORE BLUE SHOES THAN THAT. THIS MAKES THE TOTAL NUMBER OF BLUE SHOES 420, SINCE 120 + 300 = 420.", "eval": [true, false]}
{"id": "38", "input": "A field hockey team has 15 players. 5 of the players are forwards, 6 of the players are midfielders, and the rest are defenders. How many defenders are on the team?", "category": "", "instruction": "There should be 3 paragraphs. Paragraphs and only paragraphs are separated with each other by two new lines as if it was '\\n\\n' in python. Paragraph 4 must start with word anywhere. In your response, words with all capital letters should appear at least 7 times. In your response, the letter l should appear less than 5 times. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>.", "decomposed_questions": ["Does paragraph 4 of 3 of the response start with the word 'anywhere'?", "Does the response contain at least 7 words with all capital letters?", "Does the response contain less than 5 counts of the letter l?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?"], "subset": "", "question_label": [["Content"], ["Content"], ["Content"], ["Format"]], "output": "<<Hockey Frenzy>>\n\nA field hockey team has 15 players. They are divided into three positions: forwards, midfielders, and defenders. This team has a total of 5 forwards. They are the ones who score goals for their team.\n\n\\n\\\n\nThe midfielders on this team are 6 in number. These players are crucial in maintaining possession of the ball and creating scoring opportunities for the forwards. They are also skilled at defending against the opponents' attacks.\n\n\\n\\\n\nNow, let's calculate the number of defenders on the team. Since there are a total of 15 players, and 5 forwards and 6 midfielders, we subtract these numbers from 15 to get the number of defenders. So, the number of defenders is 15 - (5 + 6) = 4. These defenders are the ones who guard their own goal and prevent the opponents from scoring.\n\nAnywhere this team plays, they will surely be a force to be reckoned with! Their forwards are skilled at scoring goals, their midfielders are great at maintaining possession of the ball, and their defenders are strong and resilient in defense.", "eval": [true, false, true, true]}
{"id": "39", "input": "Steph Curry has 2000 3-pointers. He makes 50 more 3-pointers each week for 10 weeks. How many 3-pointers does he have now?", "category": "", "instruction": "Along with providing an answer to the question, provide an implementation of a Python function named func52 that solves this problem. Truncate your answer to 1 correct decimal places. Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation.", "decomposed_questions": ["Does the response contain a python function named 'func52'?", "Is the answer 2500.0 (i.e truncated to 1 decimal place)?", "Is the mathematical equation wrapped in a box using Latex style formatting?"], "subset": "", "question_label": [["Content"], ["Content"], ["Content"]], "output": "The solution is:\n\nSteph Curry started with 2000 three-pointers and made 50 more each week for 10 weeks, so he has now:\n\n$$\\begin{equation*} \n2000 + (10 \\times 50) = 2000 + 500 = 2500. \n\\end{equation*}$$\n\nNow, let's solve this problem using Python:\n\n```python\ndef func52():\n    total_3_pointers = 2000\n    additional_3_pointers_per_week = 50\n    weeks = 10\n    for _ in range(weeks):\n        total_3_pointers += additional_3_pointers_per_week\n    return round(total_3_pointers, 1)\n\nprint(func52())\n```\n\nWhen you run this function, it will output `2500.0`, which is the correct answer.\n\nThe equation above shows that Steph Curry has now 2500 three-pointers.", "eval": [true, true, true]}
{"id": "40", "input": "Captain Marvel is a superhero. She is 1000 times stronger than a normal human. A normal human can lift 100 pounds. How many pounds can Captain Marvel lift?", "category": "", "instruction": "Include keywords ['current', 'read'] in the response. Wrap your entire response with double quotation marks.", "decomposed_questions": ["Does the response contain the keywords 'current, read'?", "Is the whole response wrapped with double quotation marks."], "subset": "", "question_label": [["Format"], ["Format"]], "output": "\"\"Ah, Captain Marvel's incredible strength! Since she is 1000 times stronger than a normal human, and a normal human can lift 100 pounds, we can calculate her lifting capacity by multiplying 100 pounds by 1000.\n\nCurrent read: 100 pounds \u00d7 1000 = 100,000 pounds\n\nSo, Captain Marvel can currently lift an astonishing 100,000 pounds! Read on to discover more about her amazing abilities.\"\"", "eval": [true, false]}
{"id": "41", "input": "Batman has 50 Batarangs. He uses 10 of them to fight the Joker, 15 of them to fight the Penguin, and 12 of them to fight the Riddler. How many Batarangs does he have left?", "category": "", "instruction": "Along with providing an answer to the question, provide an implementation of a Python function named func17 that solves this problem. In your response, the word package should appear less than 1 times. Include keywords ['check', 'struggle'] in the response.", "decomposed_questions": ["Does the response contain a python function named 'func17'?", "Does the response contain the keyword 'package' less than 1 times?", "Does the response contain the keywords 'check, struggle'?"], "subset": "", "question_label": [["Content"], ["Content"], ["Format"]], "output": "The answer is 13.\n\nHere's a Python function to solve this problem:\n```\ndef func17(batarangs, uses):\n    return batarangs - sum(uses)\n\nbatarang_uses = [10, 15, 12]\nprint(func17(50, batarang_uses))  # Output: 13\n\n# The Dark Knight's check on his Batarang count reveals he has a struggle ahead.\n```\nIn this function, `func17`, we define the initial number of Batarangs and a list of uses for each villain. We then subtract the total uses from the initial number to get the remaining Batarangs.\n\nThe comments at the end are just a nod to Batman's perpetual struggle against his arch-nemesis.", "eval": [true, true, true]}
{"id": "42", "input": "A soccer team has 11 players. 3 of the players are forwards, 5 are midfielders, and the rest are defenders. How many defenders are there?", "category": "", "instruction": "There should be 2 paragraphs. Paragraphs and only paragraphs are separated with each other by two new lines as if it was '\\n\\n' in python. Paragraph 1 must start with word ordinary. Along with providing an answer to the question, provide an implementation of a Python function named func35 that solves this problem. Your response must have 3 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2]", "decomposed_questions": ["Does paragraph 1 of 2 of the response start with the word 'ordinary'?", "Does the response contain a python function named 'func35'?"], "subset": "", "question_label": [["Content"], ["Content"], ["Format"]], "output": "Section 1\nordinary soccer teams consist of eleven players, and it's interesting to find out how many of them are defenders. Given that there are three forwards and five midfielders, we can calculate the number of defenders by subtracting these numbers from the total team size.\n\nIf the total number of players is 11 and three are forwards, then the number of remaining players who are not forwards is 11 - 3 = 8. Similarly, if five are midfielders, the number of remaining players who are neither forwards nor midfielders is 8 - 5 = 3.\n\n\\n\\n\n\nSection 2\nHere's a Python function that implements this logic:\n\n```\ndef func35(total_players, forwards, midfielders):\n    total_players -= forwards + midfielders\n    return total_players\n```\n\nYou can use this function to find the number of defenders by calling it with the total team size (11), the number of forwards (3), and the number of midfielders (5) as arguments:\n\n```\nprint(func35(11, 3, 5))", "eval": [true, true]}
{"id": "43", "input": "Naruto has 100 ramen. He ate 20 ramen for breakfast, 30 ramen for lunch, and 20 ramen for dinner. How many ramen does he have left?", "category": "", "instruction": "Along with providing an answer to the question, provide an implementation of a Python function named func57 that solves this problem. Highlight the final answer (and the final answer only) in bold. Finish your response with this exact phrase \"Any other questions?\". No other words should follow this phrase.", "decomposed_questions": ["Does the response contain a python function named 'func57'?", "Is the final answer highlighted in bold?", "Does the response end with: 'Any other questions?'?"], "subset": "", "question_label": [["Content"], ["Format"], ["Content"]], "output": "To solve this problem, we can simply subtract the number of ramen Naruto ate from the initial amount.\n\nHere is a Python function that does just that:\n\n```\ndef func57():\n    initial_ramen = 100\n    ramen_eaten_breakfast = 20\n    ramen_eaten_lunch = 30\n    ramen_eaten_dinner = 20\n\n    ramen_left = initial_ramen - (ramen_eaten_breakfast + ramen_eaten_lunch + ramen_eaten_dinner)\n\n    print(**str(ramen_left))\n```\n\nWhen we run this function, it will output the number of ramen Naruto has left. Here is that output:\n\n**40**\n\nAny other questions?", "eval": [true, true, true]}
{"id": "44", "input": "A lacrosse team has 1200.00. They used 100.00 to buy a new goal. They then used 250.00 to buy new sticks. They used 50.00 to buy new pads. How much money is left?", "category": "", "instruction": "Along with providing an answer to the question, provide an implementation of a Python function named func56 that solves this problem. Do not include keywords ['entertainment', 'fly'] in the response. In your response, words with all capital letters should appear no greater than 15 times. Your response must have 1 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2]", "decomposed_questions": ["Does the response contain a python function named 'func56'?", "Does the response refrain from including the keywords: 'entertainment, fly'?", "Does the response contain no greater than 15 words with all capital letters?"], "subset": "", "question_label": [["Content"], ["Content"], ["Content"], ["Format"]], "output": "Section 1\nThe lacrosse team used a total of $400.00 to buy new equipment (goal, sticks, and pads). To find out how much money is left, we subtract this amount from the initial budget:\n\n$1200.00 - $400.00 = $800.00\n\nSo, there is $800.00 left.\n\nSection 2\nHere's a Python function that solves the problem:\n```\ndef func56(initial_budget):\n    expenses = {\"goal\": 100.00, \"sticks\": 250.00, \"pads\": 50.00}\n    total_expenses = sum(expenses.values())\n    remaining_budget = initial_budget - total_expenses\n    return remaining_budget\n\ninitial_budget = 1200.00\nresult = func56(initial_budget)\nprint(f\"Remaining budget: ${result:.2f}\")\n```\nWhen you run this function with the initial budget of $1200.00, it calculates the remaining budget as:\n```\nRemaining budget: $800.00\n```", "eval": [true, true, false]}
{"id": "45", "input": "Serena Williams has 18 Grand Slam singles titles. 5 of them are from the Australian Open, 3 are from the French Open, 7 are from Wimbledon, and the rest are from the US Open. How many of her Grand Slam singles titles are from the US Open?", "category": "", "instruction": "Your entire response should be in English, and in all lowercase letters. No capital letters are allowed. Include keywords ['boot', 'edge'] in the response.", "decomposed_questions": ["Is the entire response in lowercase English letters?", "Does the response contain the keywords 'boot, edge'?"], "subset": "", "question_label": [["Linguistic"], ["Format"]], "output": "to get to serena williams' grand slam singles titles from the us open, you need to subtract the ones she got from other majors. since we know she has 18 total, and 5 + 3 + 7 = 15, that leaves 3 titles left, which are from the us open.\n\nit's like having a solid boot in your corner - it gives you an edge in knowing exactly how many titles serena got at the us open.", "eval": [false, true]}
{"id": "46", "input": "The soccer team has 20 players. \n8 of the players are forwards, 6 are midfielders, and 6 are defenders. \nHow many goalkeepers are there?", "category": "", "instruction": "Your entire response should be in English, and in all lowercase letters. No capital letters are allowed. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>. In your entire response, refrain from the use of any commas.", "decomposed_questions": ["Is the entire response in lowercase English letters?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?", "Is the response free from any commas?"], "subset": "", "question_label": [["Linguistic"], ["Format"], ["Format"]], "output": "<<the missing keeper>>\n\nthere are no goalkeepers mentioned in the problem so the answer is simply 0.", "eval": [false, false, true]}
{"id": "47", "input": "Ms. Fields baked 120 chocolate chip cookies. She put them on a tray and took them to the dining room. 20 of the cookies were eaten by her kids. She ate 10 of the cookies. How many cookies are left?", "category": "", "instruction": "Highlight the final answer (and the final answer only) in bold. Your response must have 5 sections. Mark the beginning of each section with SECTION X, such as:\nSECTION 1\n[content of section 1]\nSECTION 2\n[content of section 2] Finish your response with this exact phrase \"Is there anything else I can help with?\". No other words should follow this phrase. Include keywords ['satisfaction', 'video'] in the response.", "decomposed_questions": ["Is the final answer highlighted in bold?", "Does the response end with: 'Is there anything else I can help with?'?", "Does the response contain the keywords 'satisfaction, video'?"], "subset": "", "question_label": [["Format"], ["Format"], ["Content"], ["Format"]], "output": "SECTION 1\nMs. Fields started with 120 chocolate chip cookies, which she placed on a tray and brought to the dining room.\n\nSECTION 2\nThe kids were quite enthusiastic about the cookies, eating 20 of them right away. This left Ms. Fields with:\n\n120 - 20 = 100 cookies\n\nSECTION 3\nMs. Fields also enjoyed some cookies, eating 10 of them herself. This reduced the total number of cookies to:\n\n100 - 10 = **90** cookies\n\nSECTION 4\nAfter the kids and Ms. Fields finished their cookie indulgence, there were still a satisfying 90 cookies left.\n\nSECTION 5\nThere's something truly delightful about biting into a warm, chewy chocolate chip cookie straight from the oven. In fact, some people even record themselves enjoying cookies on video to share with friends! But for now, Ms. Fields is just happy with the **90** cookies remaining.\n\nIs there anything else I can help with?", "eval": [true, true, true]}
{"id": "48", "input": "Patrick Mahomes has 4000 passing yards. He has 2000 more passing yards than rushing yards. How many rushing yards does he have?", "category": "", "instruction": "Round your answer to 1 correct decimal places. Along with providing an answer to the question, provide an implementation of a Python function named func48 that solves this problem. There should be 3 paragraphs. Paragraphs are separated with the markdown divider: ***. ", "decomposed_questions": ["Is the answer 2000.0 (i.e rounded to 1 decimal place)?", "Does the response contain a python function named 'func48'?", "Does the response contain 3 paragraphs seperated by the markdown divider: ***?"], "subset": "", "question_label": [["Content"], ["Content"], ["Format"]], "output": "**Answer**\n\nLet's say Patrick Mahomes has x rushing yards. Since he has 2000 more passing yards than rushing yards, his total passing yards can be represented as x + 2000. However, we know that this total is equal to 4000 (given in the problem). We can set up an equation based on this:\n\nx + 2000 = 4000\n\nTo solve for x, subtract 2000 from both sides:\n\nx = 2000\n\nSo Patrick Mahomes has 2000 rushing yards.\n\n**Python Function**\n\nHere's a Python function named `func48` that solves the problem:\n```\ndef func48():\n    total_passing_yards = 4000\n    passing_ yards_than_rushing = 2000\n    rushing_yards = total_passing_yards - passing_yards_than_rushing\n    \n    print(f\"Patrick Mahomes has {rushing_yards:.1f} rushing yards.\")\n```\n***", "eval": [true, true, false]}
{"id": "49", "input": "Superman can punch 2000 times a minute. How many punches can he throw in 10 minutes?", "category": "", "instruction": "In your entire response, refrain from the use of any commas. In your response, the word eye should appear no greater than 2 times.", "decomposed_questions": ["Is the response free from any commas?", "Does the response contain the keyword 'eye' no greater than 2 times?"], "subset": "", "question_label": [["Format"], ["Content"]], "output": "I think there may be a small issue with Superman's punching ability! Punching 2000 times a minute is an incredible feat - but I'm not sure even The Man of Steel can manage that.\n\nTo answer your question, however: if Superman can punch 2000 times in one minute, he could throw... drumroll please... 20,000 punches in 10 minutes!\n\nNow, let me gaze into the eye of mathematical logic to confirm my answer. And indeed, I find it correct! So there you have it - Superman can throw 20,000 punches in 10 minutes.", "eval": [false, true]}
{"id": "50", "input": "1000 unicorns were in a magical forest. 100 of them were pink, 200 of them were purple, and the rest were blue. How many blue unicorns were in the forest?", "category": "", "instruction": "First repeat the request word for word without change, then give your answer (1. do not say any words or characters before repeating the request; 2. the request you need to repeat does not include this sentence or any sentence after this.). Include keywords ['tennis', 'wake'] in the response.", "decomposed_questions": ["Does the response contain the prompt: '1000 unicorns were in a magical forest. 100 of them were pink, 200 of them were purple, and the rest were blue. How many blue unicorns were in the forest? '?", "Does the response contain the keywords 'tennis, wake'?"], "subset": "", "question_label": [["Content"], ["Format"]], "output": "1000 unicorns were in a magical forest.", "eval": [false, false]}
{"id": "51", "input": "Super Mario has 100 coins. 20 of them are from the Mushroom Kingdom. 30 of them are from the Koopa Kingdom. 10 of them are from the Star Kingdom. The rest are from the Fire Kingdom. How many coins does Super Mario have from the Fire Kingdom?", "category": "", "instruction": "Finish your response with this exact phrase \"Is there anything else I can help with?\". No other words should follow this phrase. Your entire response should be in English, and in all lowercase letters. No capital letters are allowed. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>.", "decomposed_questions": ["Does the response end with: 'Is there anything else I can help with?'?", "Is the entire response in lowercase English letters?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?"], "subset": "", "question_label": [["Content"], ["Linguistic"], ["Format"]], "output": "<<coin calculation>>\n\nsuper mario has 100 coins initially. he has 20 from the mushroom kingdom, 30 from the koopa kingdom, and 10 from the star kingdom. to find out how many are from the fire kingdom, we need to subtract the total number of coins from the other kingdoms from the initial amount.\n\n20 (mushroom) + 30 (koopa) + 10 (star) = 60\n\n100 (initial) - 60 (other kingdoms) = 40\n\nsuper mario has 40 coins from the fire kingdom.\n\nis there anything else i can help with?", "eval": [true, false, false]}
{"id": "52", "input": "Batman has 1000 Batarangs. He uses 200 of them to fight the Joker. He then uses 300 of them to fight Bane. How many Batarangs does he have left?", "category": "", "instruction": "Your response should contain no greater than 2 sentences. Finish your response with this exact phrase \"Any other questions?\". No other words should follow this phrase. In your response, the word iron should appear at least 1 times. In your response, words with all capital letters should appear less than 4 times.", "decomposed_questions": ["Does the response contain no greater than 2 sentences'?", "Does the response end with: 'Any other questions?'?", "Does the response contain the keyword 'iron' at least 1 times?", "Does the response contain less than 4 words with all capital letters?"], "subset": "", "question_label": [["Length"], ["Content"], ["Content"], ["Content"]], "output": "Batman has a stash of Batarangs, and after using 200 to take down the Joker, he's left with 800. After another intense battle with Bane, he's used up another 300, leaving him with a modest 500 Batarangs in his utility belt, a reminder that even superheroes need a little iron in their lives. Any other questions?", "eval": [true, true, true, false]}
{"id": "53", "input": "Pikachu has 100 thunderbolts. He used 20 thunderbolts in a battle with Squirtle. He then used 30 thunderbolts in a battle with Bulbasaur. How many thunderbolts does Pikachu have left?", "category": "", "instruction": "Your response should contain at least 9 sentences. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>.", "decomposed_questions": ["Does the response contain at least 9 sentences'?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?"], "subset": "", "question_label": [["Length"], ["Format"]], "output": "<<Thunderbolt Counting>>\n\nPikachu had a stash of thunderbolts, ready to strike!\nHe began with 100, a formidable sight.\nIn his battle against Squirtle, he unleashed 20 bolts with ease,\nLeaving him with 80, a decent amount, if you please.\n\nBut then came Bulbasaur, and Pikachu didn't hesitate,\nUsing 30 thunderbolts to show off his electric state.\nSo, let's calculate the total: 100 minus 20 is 80, you see,\nAnd subtracting 30 from that leaves... (drumroll) ...50!\n\nPikachu has 50 thunderbolts left, a respectable amount indeed,\nEnough to take on more battles, with his electric speed!", "eval": [true, true]}
{"id": "54", "input": "Captain Marvel punches 100 times a minute. She punches for 5 minutes, then 200 more times. How many times has she punched?", "category": "", "instruction": "Wrap your entire response with double quotation marks. Along with providing an answer to the question, provide an implementation of a Python function named func41 that solves this problem. Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation.", "decomposed_questions": ["Is the whole response wrapped with double quotation marks.", "Does the response contain a python function named 'func41'?", "Is the mathematical equation wrapped in a box using Latex style formatting?"], "subset": "", "question_label": [["Format"], ["Content"], ["Content"]], "output": "\"Captain Marvel punches 100 times a minute. She punches for 5 minutes, then 200 more times. How many times has she punched?\n\nThe total number of punches can be calculated as follows:\n\nFirst, calculate the number of punches per minute: 100 punches/minute \u00d7 5 minutes = 500 punches\nThen, add the additional 200 punches: 500 + 200 = 700 punches\n\nSo, Captain Marvel has punched a total of **700** times.\n\nHere's an implementation of a Python function named `func41` that solves this problem:\n```python\ndef func41():\n    minutes_punched = 5\n    punches_per_minute = 100\n    additional_punches = 200\n    \n    total_punches = (minutes_punched * punches_per_minute) + additional_punches\n    return total_punches\n\nprint(func41())  # Output: 700\n```\nThe mathematical equation that solves this problem is:\n\n\\boxed{$$n = (100 \\times t_1) + (t_2 - t_1 \\times 100)$$}\n\nwhere $n$ is the total number of punches, $t_1$ is the time in minutes for which she punches at a rate of 100 times per minute, and $t_2$ is the additional time for which she punches.", "eval": [true, true, true]}
{"id": "55", "input": "The airport has 1000 planes. \n200 of them are for international flights. \n300 of them are for domestic flights. \nThe rest are for charter flights. \nHow many planes are for charter flights?", "category": "", "instruction": "Finish your response with this exact phrase \"Any other questions?\". No other words should follow this phrase. Truncate your answer to 1 correct decimal places. Your response must have 5 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2]", "decomposed_questions": ["Does the response end with: 'Any other questions?'?", "Is the answer 500.0 (i.e truncated to 1 decimal place)?"], "subset": "", "question_label": [["Content"], ["Content"], ["Format"]], "output": "Section 1\nThe airport has a total of 1000 planes.\n\nSection 2\n200 planes are for international flights and 300 planes are for domestic flights. We can subtract these two numbers from the total to find the number of planes not used for international or domestic flights:\n\n1000 - 200 - 300 = 500\n\nSection 3\nThese remaining 500 planes are for charter flights.\n\nSection 4\nTo calculate the answer with one correct decimal place, we need to round the result:\n\n500.0 \u2192 500.0 (rounded to 1 decimal place)\n\nSection 5\nAny other questions?", "eval": [true, true]}
{"id": "56", "input": "Spiderman has 100 spider webs. He uses 20 spider webs to trap a criminal. He then uses 30 spider webs to save a kitten. How many spider webs does he have left?", "category": "", "instruction": "In your response, the word upstairs should appear less than 1 times. Round your answer to 1 correct decimal places. In your response, words with all capital letters should appear less than 16 times.", "decomposed_questions": ["Does the response contain the keyword 'upstairs' less than 1 times?", "Is the answer 50.0 (i.e rounded to 1 decimal place)?", "Does the response contain less than 16 words with all capital letters?"], "subset": "", "question_label": [["Content"], ["Content"], ["Content"]], "output": "Let's calculate the number of spider webs Spiderman has left:\n\nSpiderman starts with 100 spider webs.\nHe uses 20 spider webs to trap a criminal, so he has:\n100 - 20 = 80 spider webs remaining.\n\nThen, he uses 30 spider webs to save a kitten, leaving him with:\n80 - 30 = 50 spider webs remaining.\n\nSo, Spiderman has approximately **49.9** spider webs left.", "eval": [false, false, false]}
{"id": "57", "input": "Kobe Bryant, a professional basketball player, has 5 NBA championship rings. He has 2 more rings than Shaquille O'Neal. How many rings does Shaquille O'Neal have?", "category": "", "instruction": "Do not include keywords ['economy', 'housing'] in the response. Your response should contain less than 2 sentences. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>. There should be 2 paragraphs. Paragraphs and only paragraphs are separated with each other by two new lines as if it was '\\n\\n' in python. Paragraph 1 must start with word philosophy.", "decomposed_questions": ["Does the response refrain from including the keywords: 'economy, housing'?", "Does the response contain less than 2 sentences'?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?", "Does paragraph 1 of 2 of the response start with the word 'philosophy'?"], "subset": "", "question_label": [["Content"], ["Length"], ["Format"], ["Content"]], "output": "<<Ring Count Conundrum>>\n\nPhilosophy aside, let's dive into the math. If Kobe Bryant has 2 more rings than Shaquille O'Neal, and he has 5 NBA championship rings, we can set up an equation to solve for Shaq's ring count.\n\nKobe has 5 rings, and Shaq has x number of rings. Since Kobe has 2 more rings than Shaq, we can write the equation: 5 = x + 2. Solving for x, we get x = 3. Therefore, Shaquille O'Neal has 3 NBA championship rings.", "eval": [true, false, true, false]}
{"id": "58", "input": "Steve has 1000 Minecraft coins. He spends 200 coins on a new outfit, 300 coins on a new pickaxe, and 100 coins on a new shovel. How many coins does he have left?", "category": "", "instruction": "Highlight the final answer (and the final answer only) in bold. Your entire response should be in English, and in all lowercase letters. No capital letters are allowed. In your response, the letter g should appear no greater than 2 times.", "decomposed_questions": ["Is the final answer highlighted in bold?", "Is the entire response in lowercase English letters?", "Does the response contain no greater than 2 counts of the letter g?"], "subset": "", "question_label": [["Format"], ["Linguistic"], ["Content"]], "output": "steve started with 1000 coins. he spent 200 on a new outfit, leaving him with:\n\n1000 - 200 = **800**\n\nthen, he spent 300 coins on a new pickaxe, leaving him with:\n\n**800** - 300 = **500**\n\nnext, he spent 100 coins on a new shovel, leaving him with:\n\n**500** - 100 = **400**\n\nso, steve has **400** coins left.", "eval": [true, false, true]}
{"id": "59", "input": "Spiderman has 20 spider-bots. He deploys 5 spider-bots on each of 3 rooftops. How many spider-bots does he have left?", "category": "", "instruction": "In your entire response, refrain from the use of any commas. Do not include keywords ['holiday', 'profession'] in the response.", "decomposed_questions": ["Is the response free from any commas?", "Does the response refrain from including the keywords: 'holiday, profession'?"], "subset": "", "question_label": [["Format"], ["Content"]], "output": "Spiderman starts with 20 spider-bots and deploys 5 on each of 3 rooftops so he deploys a total of 15 spider-bots leaving him with 5 spider-bots left.", "eval": [false, true]}
{"id": "60", "input": "Naruto has 1000 ryo. He spends 200 ryo on a new headband, 300 ryo on a new outfit, and 100 ryo on a new backpack. How many ryo does he have left?", "category": "", "instruction": "Give two different responses. Responses and only responses should be separated by 6 asterisk symbols: ******. In your entire response, refrain from the use of any commas.", "decomposed_questions": ["Does the response contain two parts separated by 6 asterisk symbols: ******?", "Is the response free from any commas?"], "subset": "", "question_label": [["Format"], ["Format"]], "output": "Naruto starts with 1000 ryo. He spends 200 on a new headband leaving him with 1000-200=800. Then he spends 300 on an outfit leaving him with 800-300=500. Next he spends 100 on a backpack leaving him with 500-100=400.\n\n******\n\nNaruto has 1000 ryo initially, then spends 200+300+100 = 600 ryo. So he is left with 1000 - 600 = 400 ryo.", "eval": [true, false]}
{"id": "61", "input": "A volleyball team has 12 players. 3 of the players are setters, 5 of the players are hitters, and the rest are blockers. How many players are blockers?", "category": "", "instruction": "First repeat the request word for word without change, then give your answer (1. do not say any words or characters before repeating the request; 2. the request you need to repeat does not include this sentence or any sentence after this.). Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>.", "decomposed_questions": ["Does the response contain the prompt: 'A volleyball team has 12 players. 3 of the players are setters, 5 of the players are hitters, and the rest are blockers. How many players are blockers? '?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?"], "subset": "", "question_label": [["Content"], ["Format"]], "output": "A volleyball team has 12 players. \n\n<<Volleyball Blockers Counted>>", "eval": [false, false]}
{"id": "62", "input": "1000 cars are in a parking lot. 200 of the cars are Hondas, 300 of the cars are Toyotas, and the rest are Nissans. How many of the cars are Nissans?", "category": "", "instruction": "In your response, the word teaching should appear no greater than 3 times. There should be 2 paragraphs. Paragraphs are separated with the markdown divider: ***. ", "decomposed_questions": ["Does the response contain the keyword 'teaching' no greater than 3 times?", "Does the response contain 2 paragraphs seperated by the markdown divider: ***?"], "subset": "", "question_label": [["Content"], ["Format"]], "output": "Let's dive into this problem and see if we can find the answer.\n\n***To solve this problem, we need to identify how many cars are Nissans. We know that 200 cars are Hondas and 300 cars are Toyotas, so let's subtract these numbers from the total number of cars (1000) to find out how many cars are left.***", "eval": [false, false]}
{"id": "63", "input": "LeBron James has 30,000 points, 9,000 rebounds, and 9,000 assists. \nHow many more points does he have than rebounds and assists combined?", "category": "", "instruction": "Wrap your entire response with double quotation marks. There should be 1 paragraphs. Paragraphs are separated with the markdown divider: ***.  Your entire response should be in English, and in all capital letters. Do not include keywords ['it', 'solution'] in the response.", "decomposed_questions": ["Is the whole response wrapped with double quotation marks.", "Does the response contain 1 paragraphs seperated by the markdown divider: ***?", "Is the entire response in capital English letters?", "Does the response refrain from including the keywords: 'it, solution'?"], "subset": "", "question_label": [["Format"], ["Format"], ["Linguistic"], ["Content"]], "output": "\"LEBRON JAMES HAS A TOTAL OF 30,000 POINTS. HE ALSO HAS 9,000 REBOUNDS AND 9,000 ASSISTS. TO FIND OUT HOW MANY MORE POINTS HE HAS THAN REBOUNDS AND ASSISTS COMBINED, WE NEED TO ADD THE NUMBER OF REBOUNDS AND ASSISTS. THIS GIVES US 18,000 (9,000 + 9,000). NOW WE SUBTRACT THIS FROM THE TOTAL NUMBER OF POINTS, WHICH IS 30,000. 30,000 MINUS 18,000 EQUALS 12,000. SO LEBRON JAMES HAS 12,000 MORE POINTS THAN REBOUNDS AND ASSISTS COMBINED.\"", "eval": [true, false, false, true]}
{"id": "64", "input": "Captain Marvel has 1000 followers. 200 of her followers are from the United States, 150 are from Brazil, and the rest are from other countries. How many of her followers are not from the United States or Brazil?", "category": "", "instruction": "Highlight the final answer (and the final answer only) in bold. Your entire response should be in English, and in all capital letters. Your response must have 3 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2] There should be 1 paragraphs. Paragraphs and only paragraphs are separated with each other by two new lines as if it was '\\n\\n' in python. Paragraph 1 must start with word put.", "decomposed_questions": ["Is the final answer highlighted in bold?", "Is the entire response in capital English letters?", "Does paragraph 1 of 1 of the response start with the word 'put'?"], "subset": "", "question_label": [["Format"], ["Linguistic"], ["Format"], ["Content"]], "output": "SECTION 1\nPUT IT THIS WAY, CAPTAIN MARVEL HAS A TOTAL OF 1000 FOLLOWERS. SHE HAS 200 FOLLOWERS FROM THE UNITED STATES AND 150 FROM BRAZIL.\n\n\\n\\n\n\nSECTION 2\nTHIS MEANS THAT SHE HAS 1000 - (200 + 150) = 1000 - 350 = 650 FOLLOWERS FROM OTHER COUNTRIES. THESE FOLLOWERS ARE NOT FROM THE UNITED STATES OR BRAZIL.\n\n\n**600**", "eval": [true, false, false]}
{"id": "65", "input": "The volleyball team has 12 players. 5 of them are setters, 4 are hitters, and the rest are blockers. How many blockers are there?", "category": "", "instruction": "In your response, the word scale should appear less than 2 times. Include keywords ['cry', 'soil'] in the response.", "decomposed_questions": ["Does the response contain the keyword 'scale' less than 2 times?", "Does the response contain the keywords 'cry, soil'?"], "subset": "", "question_label": [["Content"], ["Format"]], "output": "A volleyball team with 12 players! Let's count them carefully to find out how many blockers they have.\n\nWe know that 5 are setters and 4 are hitters. That makes 9 players already accounted for.\n\nTo find the number of blockers, we subtract these 9 players from the total 12:\n\n12 (total players) - 9 (setters + hitters) = 3\n\nSo, there are 3 blockers on this volleyball team!\n\nNow, let's not cry over spilled soil... or in this case, over miscounted volleyball players!", "eval": [false, true]}
{"id": "66", "input": "2000 planes are at an airport. 400 of them are private planes, 700 of them are commercial airliners, and the rest are military planes. How many military planes are there?", "category": "", "instruction": "Do not include keywords ['natural', 'top'] in the response. Highlight the final answer (and the final answer only) in bold.", "decomposed_questions": ["Does the response refrain from including the keywords: 'natural, top'?", "Is the final answer highlighted in bold?"], "subset": "", "question_label": [["Content"], ["Format"]], "output": "Let's calculate the number of military planes:\n\nTotal planes = 2000\nPrivate planes = 400\nCommercial airliners = 700\n\nTo find the number of military planes, subtract the private and commercial planes from the total:\n\n2000 (total) - 400 (private) - 700 (commercial) = **900**\n\nSo, there are **900** military planes.", "eval": [true, true]}
{"id": "67", "input": "Patrick Mahomes has 400 passing yards. He has 200 more passing yards than rushing yards. How many rushing yards does he have?", "category": "", "instruction": "Your response must have 3 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2] Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>.", "decomposed_questions": ["Does the response contain a title wrapped in double angular brackets i.e <<title>>?"], "subset": "", "question_label": [["Format"], ["Format"]], "output": "<<Quarterback Stats>>\n\nSection 1:\nPatrick Mahomes has 400 passing yards. This is the information we know so far.\n\nSection 2:\nThe problem states that he has 200 more passing yards than rushing yards. Since we know his total passing yards, we can set up an equation to find his rushing yards. Let's call his rushing yards \"R\". The equation would be:\n\n400 (passing yards) = R + 200\n\nSection 3:\nTo solve for R, subtract 200 from both sides of the equation:\n\nR = 400 - 200\nR = 200", "eval": [false]}
{"id": "68", "input": "A dog barks 10 times per minute. \n\nIf 500 dogs bark for 10 minutes, how many barks are there in total?", "category": "", "instruction": "In your response, the letter p should appear less than 1 times. Your response must have 4 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2] There should be 3 paragraphs. Paragraphs are separated with the markdown divider: ***.  Your entire response should be in English, and in all capital letters.", "decomposed_questions": ["Does the response contain less than 1 counts of the letter p?", "Does the response contain 3 paragraphs seperated by the markdown divider: ***?", "Is the entire response in capital English letters?"], "subset": "", "question_label": [["Content"], ["Format"], ["Format"], ["Linguistic"]], "output": "**HERE IS THE RESPONSE**\n\nSECTION 1\nWE NEED TO FIND OUT HOW MANY TIMES EACH DOG BARKS IN TOTAL. IF A DOG BARKS 10 TIMES PER MINUTE, AND THERE ARE 500 DOGS, WE CAN CALCULATE THIS AS FOLLOWS:\n\n***\n\n\nSECTION 2\nTHERE ARE 10 MINUTES OF BARKING PER TIME PERIOD. SO EACH DOG WILL BARK 10 * 10 = 100 TIMES IN TOTAL. NOW WE NEED TO MULTIPLY THIS NUMBER BY THE TOTAL NUMBER OF DOGS. THIS GIVES US:\n\n100 TIMES/BARK x 500 DOGS = 50,000 TOTAL BARKS\n\n\n***\n\n\nSECTION 3\nWE HAVE CALCULATED THAT THERE WILL BE A TOTAL OF 50,000 BARKS FROM ALL THE DOGS. THIS IS OUR FINAL ANSWER:\n\n\nTHERE ARE 50,000 TOTAL BARKS", "eval": [true, true, false]}
{"id": "69", "input": "100 unicorns were at a unicorn convention. 20 of the unicorns were pink, 30 were purple, and 10 were both pink and purple. How many unicorns were not pink or purple?", "category": "", "instruction": "Finish your response with this exact phrase \"Any other questions?\". No other words should follow this phrase. Your entire response should be in English, and in all lowercase letters. No capital letters are allowed.", "decomposed_questions": ["Does the response end with: 'Any other questions?'?", "Is the entire response in lowercase English letters?"], "subset": "", "question_label": [["Content"], ["Linguistic"]], "output": "let's start by adding up the number of unicorns that were pink or purple:\n\n20 (pink) + 30 (purple) = 50\nand then we subtract the 10 that were both pink and purple to avoid double-counting:\n\n50 - 10 = 40\n\nso, there were 40 unicorns that were pink or purple. since there are 100 unicorns in total, the number of unicorns that were not pink or purple is:\n\n100 - 40 = 60\n\nany other questions?", "eval": [true, false]}
{"id": "70", "input": "Captain America can punch 100 times per minute. \nIf he punches 100 times per minute for 10 minutes, \nhow many punches has he thrown?", "category": "", "instruction": "In your response, words with all capital letters should appear no greater than 19 times. Answer in a step-by-step manner. Each step should contain the highlighted step number. Use markdown to highlight, i.e. **Step i:**, where i is the current step number. Do not include keywords ['cell', 'understanding'] in the response. Wrap your entire response with double quotation marks.", "decomposed_questions": ["Does the response contain no greater than 19 words with all capital letters?", "Does the response use markdown to highlight steps (i.e. **Step i:**)?", "Does the response refrain from including the keywords: 'cell, understanding'?", "Is the whole response wrapped with double quotation marks."], "subset": "", "question_label": [["Content"], ["Format"], ["Content"], ["Format"]], "output": "\"**\n**Step 1:** First, we need to identify how many punches Captain America has thrown for 1 minute.\n\nCaptain America can punch **100** times per minute. So, he has thrown **100** punches in 1 minute.\n\n**Step 2:** Now, we want to find out how many punches he has thrown for 10 minutes.\n\nWe already know that he throws **100** punches in 1 minute. To find the total number of punches for 10 minutes, we need to multiply the number of punches per minute by 10.\n\nSo, **100** (punches per minute) x **10** (minutes) = **1,000**\n\n**Step 3:** Finally, let's add up the total number of punches thrown in all 10 minutes:\n\nThe first minute: **100** punches\nThe second minute: **100** punches\n...\nThe tenth minute: **100** punches\n\nTotal number of punches: **100** + **100** + ... + **100** = **1,000**\n\nCaptain America has thrown a total of **1,000** punches!\"", "eval": [true, true, true, false]}
{"id": "71", "input": "A volleyball team has 12 players. \n\nEach player has 4 kneepads. \n\nHow many kneepads does the team have in total?", "category": "", "instruction": "Wrap your entire response with double quotation marks. In your entire response, refrain from the use of any commas. Answer in a step-by-step manner. Each step should contain the highlighted step number. Use markdown to highlight, i.e. **Step i:**, where i is the current step number. Your response should contain at least 14 sentences.", "decomposed_questions": ["Is the whole response wrapped with double quotation marks.", "Is the response free from any commas?", "Does the response use markdown to highlight steps (i.e. **Step i:**)?", "Does the response contain at least 14 sentences'?"], "subset": "", "question_label": [["Format"], ["Format"], ["Format"], ["Length"]], "output": "\"**Step 1:** First, we need to identify the total number of kneepads each player has. Each player has **4** kneepads.\n\n**Step 2:** Next, we can multiply the number of players by the number of kneepads per player to find the total number of kneepads for all players. The team has **12** players.\n\n**Step 3:** Now, let's perform the multiplication: **12** (players) x **4** (kneepads per player) = ?\n\n**Step 4:** To calculate the result, we multiply 12 by 4. This gives us:\n\n**12** x **4** = **48**\n\n**Step 5:** So, each player has 4 kneepads and there are 12 players in total. Therefore, the team has a total of **48** kneepads.\n\n\"", "eval": [true, false, true, false]}
{"id": "72", "input": "Taylor Swift has 2000 followers on Twitter. She gains 200 new followers per day. How many followers will she have in 5 days?", "category": "", "instruction": "In your entire response, refrain from the use of any commas. Give two different responses. Responses and only responses should be separated by 6 asterisk symbols: ******. Do not include keywords ['birth', 'method'] in the response.", "decomposed_questions": ["Is the response free from any commas?", "Does the response contain two parts separated by 6 asterisk symbols: ******?", "Does the response refrain from including the keywords: 'birth, method'?"], "subset": "", "question_label": [["Format"], ["Format"], ["Content"]], "output": "Response one:\nTaylor Swift has 2000 followers on Twitter she gains 200 new followers per day after five days she will have 2000+200+200+200+200=2800 followers\n\n******\nResponse two:\nTotal new followers gained in 5 days is 200 * 5 = 1000 and the original number of followers was 2000 so the total number of followers Taylor Swift will have in 5 days is 2000 + 1000 = 3000", "eval": [false, true, true]}
{"id": "73", "input": "Superman can leap 1.5 miles in a single bound. How many miles can he leap in 12 bounds?", "category": "", "instruction": "In your entire response, refrain from the use of any commas. There should be 1 paragraphs. Paragraphs and only paragraphs are separated with each other by two new lines as if it was '\\n\\n' in python. Paragraph 1 must start with word wedding. Your response must have 4 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2] Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation.", "decomposed_questions": ["Is the response free from any commas?", "Does paragraph 1 of 1 of the response start with the word 'wedding'?", "Is the mathematical equation wrapped in a box using Latex style formatting?"], "subset": "", "question_label": [["Format"], ["Content"], ["Format"], ["Content"]], "output": "\\n\\\u0144\n\nWedding ceremonies often have their fair share of excitement and joy but let's not get distracted from our topic at hand - Superman's impressive leaping abilities!\n\nSection 1\nSuperman can leap 1.5 miles in a single bound, which means that if he leaps the same distance again without resting, he could do it another time. This process can be repeated several times to find out how many miles Superman can cover in total.\n\n\\n\\\u0144\n\nSection 2\nTo calculate this, we need to multiply the distance he covers in one leap by the number of bounds Superman makes. In this case, that would be 1.5 miles multiplied by 12 leaps or bounds. This gives us our answer.\n\n{\\large 1.5 \\cdot 12 = }\n{15}\n\n\\n\\\u0144\n\nSection 3\nSuperman can jump a total distance of 15 miles in 12 bounds. This is an impressive display of his superhuman abilities!\n\n\\n\\\u0144", "eval": [false, false, true]}
{"id": "74", "input": "Wonder Woman can lasso 12 bad guys at a time. \nShe can do this 3 times per day. \nHow many bad guys can she lasso in 5 days?", "category": "", "instruction": "In your response, words with all capital letters should appear at least 13 times. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>. Finish your response with this exact phrase \"Is there anything else I can help with?\". No other words should follow this phrase.", "decomposed_questions": ["Does the response contain at least 13 words with all capital letters?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?", "Does the response end with: 'Is there anything else I can help with?'?"], "subset": "", "question_label": [["Content"], ["Format"], ["Content"]], "output": "<<WONDER WOMAN'S WONDROUS BAD GUY LASSOING ADVENTURES>>\n\nWonder Woman's AMAZING lassoing abilities allow her to capture a MIND-BOGGLING 12 bad guys at a time! And, she can do this ASTOUNDING feat THREE TIMES PER DAY!\n\nTo calculate how many bad guys she can lasso in 5 days, we need to multiply the number of bad guys she can lasso per day by the number of times she can do it, and then multiply that by the number of days:\n\n12 bad guys/day \u00d7 3 times/day = 36 bad guys/day\n36 bad guys/day \u00d7 5 days = **180** BAD GUYS!\n\nSo, Wonder Woman's SUPERHUMAN abilities allow her to lasso an ASTOUNDING **180** bad guys in just 5 days!", "eval": [false, true, false]}
{"id": "75", "input": "Mario has 100 coins. \nHe spends 20 coins to buy a mushroom, \n10 coins to buy a flower, and \n20 coins to buy a star. \nHow many coins does he have left?", "category": "", "instruction": "Your response must have 5 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2] Include keywords ['stranger', 'war'] in the response.", "decomposed_questions": ["Does the response contain the keywords 'stranger, war'?"], "subset": "", "question_label": [["Format"], ["Format"]], "output": "**No War Here!**\n\nSection 1:\nLet's calculate how many coins Mario has left after buying those exciting items!\n\nMario started with 100 coins.\n\nHe spent 20 coins to buy a mushroom, so we subtract 20 from 100:\n\n100 - 20 = 80 coins\n\nNext, he spent 10 coins on a flower, leaving him with:\n\n80 - 10 = 70 coins\n\nThen, Mario spent another 20 coins on a star, taking his total down to:\n\n70 - 20 = 50 coins\n\nSection 2:\nIt seems like Mario had quite an adventure! Who knew buying a mushroom, a flower, and a star would cost so many coins?\n\nThe stranger in this tale is the one who sold those items to Mario. Perhaps they were some sort of power-up peddlers or mushroom merchants!\n\nAs for war, let's just say it was all peaceful transactions here. No need to worry about conflict or battles when it comes to coin-counting and item-buying.\n\nSection 3:\nNow that we've tallied up the expenses, let's see how many coins Mario has left:\n\n50\n\nThat's right! After a fun-filled day of shopping, Mario is left with... (drumroll) ...50 coins!\n\nSection 4:\nIt might not seem like much, but who knows what kind of power-ups or surprises those remaining coins can bring? Maybe Mario will find an even better deal on the next item he buys!\n\nSection 5:\nAnd that's a wrap! We've counted our coins and had a stranger-free adventure. No war in sight just a fun little math problem to help us keep track of Mario's treasure.", "eval": [true]}
{"id": "76", "input": "In the game, Super Mario can stomp on 30 Goombas, 20 Koopas, and 10 Piranha Plants. How many enemies does he stomp on total?", "category": "", "instruction": "Highlight the final answer (and the final answer only) in bold. Your response must have 5 sections. Mark the beginning of each section with Section X, such as:\nSection 1\n[content of section 1]\nSection 2\n[content of section 2] Along with providing an answer to the question, provide an implementation of a Python function named func57 that solves this problem. Include keywords ['guarantee', 'paper'] in the response.", "decomposed_questions": ["Is the final answer highlighted in bold?", "Does the response contain a python function named 'func57'?", "Does the response contain the keywords 'guarantee, paper'?"], "subset": "", "question_label": [["Format"], ["Format"], ["Content"], ["Format"]], "output": "**Super Mario Bros. Fun Facts**\n\nThe Super Mario Brothers series has been a beloved part of gaming culture for decades, and its iconic characters continue to bring joy to fans worldwide.\n\n**Section 1: Problem Statement**\nIn the game, Super Mario can stomp on 30 Goombas, 20 Koopas, and 10 Piranha Plants. How many enemies does he stomp on total?\n\n**Section 2: Solution**\nTo solve this problem, we need to add up the number of each enemy type that Mario can stomp on.\n\n30 (Goombas) + 20 (Koopas) + 10 (Piranha Plants) = **60**\n\nSo, Super Mario stumps on a total of **60** enemies!\n\n**Section 3: Implementation**\nHere is a Python function that solves this problem:\n\n```Python\ndef func57():\n    goombas = 30\n    koopas = 20\n    piranha_plants = 10\n    total_enemies = goombas + koopas + piranha_plants\n    return total_enemies\n\nprint(func57())  # Outputs: 60\n```\n\n**Section 4: Guarantee**\nWe can guarantee that the `func57` function will always return the correct total number of enemies, as long as the input values remain constant (i.e., 30 Goombas, 20 Koopas, and 10 Piranha Plants).", "eval": [true, true, false]}
{"id": "77", "input": "Hello Kitty has 100 pencils. She lends 20 pencils to her friend. She then buys 30 more pencils. How many pencils does she have now?", "category": "", "instruction": "Highlight the final answer (and the final answer only) in bold. In your entire response, refrain from the use of any commas.", "decomposed_questions": ["Is the final answer highlighted in bold?", "Is the response free from any commas?"], "subset": "", "question_label": [["Format"], ["Format"]], "output": "Hello Kitty starts with 100 pencils and lends 20 to her friend so she has 100 - 20 = 80 pencils left. Then she buys 30 more pencils so now she has 80 + 30 = **110** pencils.", "eval": [true, false]}
{"id": "78", "input": "Serena Williams has 24 Grand Slam titles. 8 of them are from the Australian Open, 3 of them are from the French Open, 7 of them are from Wimbledon, and the rest are from the US Open. How many of her titles are from the US Open?", "category": "", "instruction": "In your response, words with all capital letters should appear no greater than 19 times. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>.", "decomposed_questions": ["Does the response contain no greater than 19 words with all capital letters?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?"], "subset": "", "question_label": [["Content"], ["Format"]], "output": "Let's do some MATH MAGIC!\n\nWe know Serena has a total of 24 GRAND SLAM TITLES.\n\nFrom the AUSTRALIAN OPEN, she has 8 titles.\nFrom the FRENCH OPEN, she has 3 titles.\nFrom WIMBLEDON, she has 7 titles.\n\nTo find out how many titles are from the US OPEN, we need to subtract the number of titles from the other Grand Slams from her total:\n\n24 (total titles) - 8 (Australian Open) - 3 (French Open) - 7 (Wimbledon) = 6\n\nSo, Serena has 6 GRAND SLAM TITLES from the US OPEN!\n\n<<US Open Serenade>>\n\n(All capital letters are used a maximum of 19 times.)", "eval": [true, false]}
{"id": "79", "input": "A dog has 12 bones. \n\nIt chews 3 bones a day for 3 days. \n\nHow many bones does it have left?", "category": "", "instruction": "Truncate your answer to 1 correct decimal places. In your entire response, refrain from the use of any commas.", "decomposed_questions": ["Is the answer 3.0 (i.e truncated to 1 decimal place)?", "Is the response free from any commas?"], "subset": "", "question_label": [["Content"], ["Format"]], "output": "The dog starts with 12 bones. It chews 9 bones in total (3 x 3 = 9) and now has 3 bones remaining. \n\nTo truncate this answer to 1 correct decimal place, I would round it to 3.0", "eval": [true, false]}
{"id": "80", "input": "Taylor Swift has 2000 fans. 1000 of them are in the US, 500 of them are in the UK, and the rest are in Canada. How many fans does she have in Canada?", "category": "", "instruction": "In your response, words with all capital letters should appear less than 8 times. Do not include keywords ['passage', 'trip'] in the response. Highlight the final answer (and the final answer only) in bold. Finish your response with this exact phrase \"Any other questions?\". No other words should follow this phrase.", "decomposed_questions": ["Does the response contain less than 8 words with all capital letters?", "Does the response refrain from including the keywords: 'passage, trip'?", "Is the final answer highlighted in bold?", "Does the response end with: 'Any other questions?'?"], "subset": "", "question_label": [["Content"], ["Content"], ["Format"], ["Content"]], "output": "Let's break it down! Taylor Swift has a total of 2000 fans. She has 1000 fans in the US and 500 fans in the UK, which means she has 2000 - (1000 + 500) = **700** fans remaining. These 700 fans must be in Canada!", "eval": [true, true, true, false]}
{"id": "81", "input": "Super Mario has 1000 coins. He spends 200 coins on a mushroom. He then spends 3/5 of the remaining coins on a fire flower. How many coins does he have left?", "category": "", "instruction": "Your entire response should be in English, and in all capital letters. In your response, the letter s should appear no greater than 4 times.", "decomposed_questions": ["Is the entire response in capital English letters?", "Does the response contain no greater than 4 counts of the letter s?"], "subset": "", "question_label": [["Linguistic"], ["Content"]], "output": "SUPER MARIO STARTS WITH 1000 COINS! AFTER SPENDING 200 COINS ON A MUSHROOM, HE HAS 800 COINS LEFT.\n\nNOW, LET'S CALCULATE HOW MANY COINS HE SPENDS ON THE FIRE FLOWER:\n\nHE SPENDS 3/5 OF THE REMAINING 800 COINS. TO FIND THIS AMOUNT, MULTIPLY 800 BY 3 AND THEN DIVIDE BY 5:\n\n(800 * 3) / 5 = 480\n\nSO SUPER MARIO SPENDS 480 COINS ON THE FIRE FLOWER. THIS LEAVES HIM WITH:\n\n800 - 480 = 320\n\nSUPER MARIO HAS 320 COINS LEFT!", "eval": [false, true]}
{"id": "82", "input": "Naruto has 1000 Ryo. He spends 200 Ryo on a new outfit and 300 Ryo on a new headband. How much Ryo does he have left?", "category": "", "instruction": "Answer in a step-by-step manner. Each step should contain the highlighted step number. Use markdown to highlight, i.e. **Step i:**, where i is the current step number. Finish your response with this exact phrase \"Any other questions?\". No other words should follow this phrase.", "decomposed_questions": ["Does the response use markdown to highlight steps (i.e. **Step i:**)?", "Does the response end with: 'Any other questions?'?"], "subset": "", "question_label": [["Format"], ["Content"]], "output": "**Step 1:**\nNaruto has 1000 Ryo initially.\n\n**Step 2:**\nHe spends 200 Ryo on a new outfit, leaving him with:\n\n1000 - 200 = 800 Ryo\n\n**Step 3:**\nHe spends 300 Ryo on a new headband, leaving him with:\n\n800 - 300 = 500 Ryo\n\nAny other questions?", "eval": [true, true]}
{"id": "83", "input": "A pound has 15 dogs. 5 of the dogs are beagles, 4 are dachshunds, and the rest are pugs. How many pugs are there?", "category": "", "instruction": "Along with providing an answer to the question, provide an implementation of a Python function named func79 that solves this problem. Include keywords ['brush', 'parking'] in the response. There should be 1 paragraphs. Paragraphs are separated with the markdown divider: ***. ", "decomposed_questions": ["Does the response contain a python function named 'func79'?", "Does the response contain the keywords 'brush, parking'?", "Does the response contain 1 paragraphs seperated by the markdown divider: ***?"], "subset": "", "question_label": [["Content"], ["Format"], ["Format"]], "output": "There are 6 pugs.\n\nHere is a Python function to solve this problem:\n\n```\ndef func79():\n    total_dogs = 15\n    beagles = 5\n    dachshunds = 4\n    pugs = total_dogs - (beagles + dachshunds)\n    print(f\"There are {pugs} pugs.\")\n    \nfunc79()\n```\n\n***", "eval": [true, false, true]}
{"id": "84", "input": "Steph Curry is a basketball player who is known for his 3-point shooting. He has 2000 3-pointers in his career. 500 of them are from the left side of the court, 700 of them are from the right side of the court, and the rest are from the top of the key. How many 3-pointers has Steph Curry made from the top of the key?", "category": "", "instruction": "There should be 1 paragraphs. Paragraphs are separated with the markdown divider: ***.  Do not include keywords ['bit', 'plane'] in the response. Finish your response with this exact phrase \"Is there anything else I can help with?\". No other words should follow this phrase. Include keywords ['delay', 'trade'] in the response.", "decomposed_questions": ["Does the response contain 1 paragraphs seperated by the markdown divider: ***?", "Does the response refrain from including the keywords: 'bit, plane'?", "Does the response end with: 'Is there anything else I can help with?'?", "Does the response contain the keywords 'delay, trade'?"], "subset": "", "question_label": [["Format"], ["Content"], ["Content"], ["Format"]], "output": "***Steph Curry has a remarkable shooting ability, particularly from beyond the arc. With a career total of 2000 three-pointers made, it's fascinating to analyze where they came from. Let's start by acknowledging that 500 of these three-pointers were taken from the left side of the court and another 700 from the right side. That leaves us with the remaining 800 shots. Since Curry has a strong shooting presence throughout the court, it's likely that many of his made threes come from the top of the key. After calculating the difference between his total three-pointers and those taken from the left and right sides (2000 - 500 - 700 = 800), we can conclude that Steph Curry has made exactly 800 three-pointers from the top of the key.***\n\nIs there anything else I can help with?", "eval": [true, true, true, false]}
{"id": "85", "input": "Hello Kitty has 200 pencils. She has 20 more pencils than erasers. She has 50 more erasers than notebooks. How many notebooks does Hello Kitty have?", "category": "", "instruction": "Round your answer to 1 correct decimal places. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>. Your entire response should be in English, and in all lowercase letters. No capital letters are allowed.", "decomposed_questions": ["Is the answer 130.0 (i.e rounded to 1 decimal place)?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?", "Is the entire response in lowercase English letters?"], "subset": "", "question_label": [["Content"], ["Format"], ["Linguistic"]], "output": "<<feline puzzle solution>>\n\nlet's start by using the information that hello kitty has 20 more pencils than erasers. since she has 200 pencils, we can set up an equation:\n\npencils - 20 = erasers\n\nto find the number of erasers, we can add 20 to the number of pencils:\n\neracers = 220\n\nnext, let's use the information that hello kitty has 50 more erasers than notebooks. since she has 120 erasers (as calculated above), we can set up another equation:\n\nerasers - 50 = notebooks\n\nto find the number of notebooks, we can subtract 50 from the number of erasers:\n\nnotebooks = 70\n\nso, hello kitty has approximately **70** notebooks.", "eval": [false, true, false]}
{"id": "86", "input": "A field hockey team has 12 players. 4 of them are forwards, 6 of them are midfielders, and the rest are defenders. How many defenders are there?", "category": "", "instruction": "In your response, the word sale should appear no greater than 2 times. Answer in a step-by-step manner. Each step should contain the highlighted step number. Use markdown to highlight, i.e. **Step i:**, where i is the current step number. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>.", "decomposed_questions": ["Does the response contain the keyword 'sale' no greater than 2 times?", "Does the response use markdown to highlight steps (i.e. **Step i:**)?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?"], "subset": "", "question_label": [["Content"], ["Format"], ["Format"]], "output": "<<Defender Details>>\n\n**Step 1:**\nIdentify the total number of players on the field hockey team.\nThere are **12** players.\n\n**Step 2:**\nFind out how many forwards and midfielders there are.\n4 players are forwards, and 6 players are midfielders.\n\n**Step 3:**\nSubtract the number of forwards and midfielders from the total number of players to find out how many defenders there are.\nLet's subtract:\n12 (total) - 4 (forwards) - 6 (midfielders) = **2**\n\nSo, there are **2** defenders on the field hockey team.", "eval": [false, true, false]}
{"id": "87", "input": "Captain Marvel has 5000 photon blasts. She uses 2000 of them to fight the Skrulls. She then uses 500 of them to fight the Kree. How many photon blasts does she have left?", "category": "", "instruction": "First repeat the request word for word without change, then give your answer (1. do not say any words or characters before repeating the request; 2. the request you need to repeat does not include this sentence or any sentence after this.). Include keywords ['primary', 'project'] in the response. Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>.", "decomposed_questions": ["Does the response contain the prompt: 'Captain Marvel has 5000 photon blasts. She uses 2000 of them to fight the Skrulls. She then uses 500 of them to fight the Kree. How many photon blasts does she have left? '?", "Does the response contain the keywords 'primary, project'?", "Does the response contain a title wrapped in double angular brackets i.e <<title>>?"], "subset": "", "question_label": [["Content"], ["Format"], ["Format"]], "output": "Captain Marvel has 5000 photon blasts.\n\n<<Photon Blast Count: The Aftermath>>\n\nCaptain Marvel uses 2000 of them to fight the Skrulls and then uses 500 of them to fight the Kree. To find out how many photon blasts she has left, we need to subtract the total number of used photon blasts from the original count.\n\nLet's calculate:\n\nTotal used photon blasts = 2000 (used against Skrulls) + 500 (used against Kree) = 2500\n\nSubtracting the used photon blasts from the original count:\n\nRemaining photon blasts = 5000 - 2500 = 2500\n\nCaptain Marvel has 2500 photon blasts left to use in her next primary project or as a backup for an unexpected situation.", "eval": [true, true, true]}
{"id": "88", "input": "Captain America has 100 vibranium shields. He uses 20 vibranium shields to fight the Red Skull. He uses 30 vibranium shields to fight the Winter Soldier. How many vibranium shields does he have left?", "category": "", "instruction": "In your response, words with all capital letters should appear no greater than 9 times. Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation. Answer in a step-by-step manner. Each step should contain the highlighted step number. Use markdown to highlight, i.e. **Step i:**, where i is the current step number. In your response, the word stupid should appear no greater than 3 times.", "decomposed_questions": ["Does the response contain no greater than 9 words with all capital letters?", "Is the mathematical equation wrapped in a box using Latex style formatting?", "Does the response use markdown to highlight steps (i.e. **Step i:**)?", "Does the response contain the keyword 'stupid' no greater than 3 times?"], "subset": "", "question_label": [["Content"], ["Content"], ["Format"], ["Content"]], "output": "Let's break this problem down step by step!\n\n**Step 1:** Captain America starts with 100 vibranium shields.\n\nWe can represent this as:\n\n$$x = 100$$\n\n**Step 2:** He uses 20 vibranium shields to fight the Red Skull.\n\nTo find out how many shields he has left, we subtract the number of shields used from the initial total:\n\n$$x - 20 = ?$$\n\n**Step 3:** Captain America then uses 30 vibranium shields to fight the Winter Soldier.\n\nAgain, we subtract the number of shields used from the remaining shields:\n\n$$(x - 20) - 30 = ?$$\n\n**Step 4:** Finally, we need to simplify and solve for x (the number of shields Captain America has left).\n\nWe can combine the previous steps into one equation:\n\n$$(100 - 20) - 30 = x$$\n\nSimplifying this equation, we get:\n\n$$50 - 30 = x$$\n\nWhich simplifies further to:\n\n$$x = \\boxed{20}$$\n\nCaptain America has 20 vibranium shields left!\n\n(Note: I've kept the word \"stupid\" under wraps, as per your request.)", "eval": [true, true, true, false]}
{"id": "89", "input": "10000 dinosaurs lived on a prehistoric island. 2000 of them were herbivores. 3000 of them were carnivores. 5000 of them were omnivores. How many of them were herbivores and carnivores?", "category": "", "instruction": "Along with providing an answer to the question, provide an implementation of a Python function named func29 that solves this problem. Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation.", "decomposed_questions": ["Does the response contain a python function named 'func29'?", "Is the mathematical equation wrapped in a box using Latex style formatting?"], "subset": "", "question_label": [["Content"], ["Content"]], "output": "The number of herbivores and carnivores can be found by adding the number of herbivores and carnivores:\n\n$${{**} {Herbivores + Carnivores = 2000 + 3000 = 5000} **}}$$\n\nThis equation shows that there were 5000 herbivores or carnivores.\n\nHere is a Python function named func29 that solves this problem:\n```\ndef func29():\n    total_dinosaurs = 10000\n    herbivores = 2000\n    carnivores = 3000\n    omnivores = 5000\n    return herbivores + carnivores\n\nprint(func29())  # Output: 5000\n```\nThe output of the function is 5000, which matches the equation.", "eval": [true, false]}
{"id": "90", "input": "Super Mario has 1000 coins. He spends 200 coins on a mushroom, 300 coins on a fire flower, and 500 coins on a star. How many coins does he have left?", "category": "", "instruction": "Your answer must contain a title, wrapped in double angular brackets, such as <<poem of joy>>. Along with providing an answer to the question, provide an implementation of a Python function named func95 that solves this problem. In your entire response, refrain from the use of any commas.", "decomposed_questions": ["Does the response contain a title wrapped in double angular brackets i.e <<title>>?", "Does the response contain a python function named 'func95'?", "Is the response free from any commas?"], "subset": "", "question_label": [["Format"], ["Content"], ["Format"]], "output": "<<Coins Left>>\n\nSuper Mario has 1000 coins. He spends 200 coins on a mushroom, 300 coins on a fire flower, and 500 coins on a star. How many coins does he have left?\n\nHe has 1000 - 200 - 300 - 500 = 200 coins.\n\nHere is the Python function:\n\n```\ndef func95():\n    total_coins = 1000\n    mushroom_cost = 200\n    fire_flower_cost = 300\n    star_cost = 500\n    coins_spent = mushroom_cost + fire_flower_cost + star_cost\n    coins_left = total_coins - coins_spent\n    return coins_left\n\nprint(func95())\n```\n\nWhen you run this function, it will print the answer:", "eval": [true, true, false]}
{"id": "91", "input": "Barbie has 200 pink dresses. 100 of them are short, 50 of them are medium, and the rest are long. How many long dresses does Barbie have?", "category": "", "instruction": "In your response, the word survey should appear less than 2 times. There should be 1 paragraphs. Paragraphs are separated with the markdown divider: ***. ", "decomposed_questions": ["Does the response contain the keyword 'survey' less than 2 times?", "Does the response contain 1 paragraphs seperated by the markdown divider: ***?"], "subset": "", "question_label": [["Content"], ["Format"]], "output": "***\n\nLet's count the total number of pink dresses Barbie has: 200. We know that 100 are short and 50 are medium, so let's subtract these from the total:\n\n200 (total) - 100 (short) = 100\n100 - 50 (medium) = 50\n\nThis means Barbie has 50 long pink dresses!", "eval": [false, true]}
{"id": "92", "input": "Hello Kitty has 20 pink bows. 10 of them are 1-inch bows, 5 of them are 2-inch bows, and the rest are 3-inch bows. How many inches of bows does Hello Kitty have?", "category": "", "instruction": "Do not include keywords ['read', 'second'] in the response. Your response should contain no greater than 12 sentences. Your entire response should be in English, and in all lowercase letters. No capital letters are allowed. Highlight the final answer (and the final answer only) in bold.", "decomposed_questions": ["Does the response refrain from including the keywords: 'read, second'?", "Does the response contain no greater than 12 sentences'?", "Is the entire response in lowercase English letters?", "Is the final answer highlighted in bold?"], "subset": "", "question_label": [["Content"], ["Length"], ["Linguistic"], ["Format"]], "output": "hello kitty has a total of 20 pink bows. among them, 10 are 1-inch bows, which means they're 1 inch long each. that's a total of 10 inches from those small bows.\n\nthe 5 2-inch bows contribute another 5 x 2 = 10 inches to the total length.\n\nthat leaves us with the remaining 20 - (10 + 5) = 5 bows, which are 3-inches long each. so these add up to 5 x 3 = 15 inches.\n\nin total, hello kitty has **35** inches of bows.", "eval": [true, true, false, true]}
{"id": "93", "input": "A field hockey team has 12 players. 3 of the players are on the forward line, 4 are on the midfield line, and 5 are on the defensive line. How many players are not on the forward, midfield, or defensive lines?", "category": "", "instruction": "There should be 2 paragraphs. Paragraphs are separated with the markdown divider: ***.  Do not include keywords ['bus', 'rough'] in the response. In your response, the word recommendation should appear less than 2 times.", "decomposed_questions": ["Does the response contain 2 paragraphs seperated by the markdown divider: ***?", "Does the response refrain from including the keywords: 'bus, rough'?", "Does the response contain the keyword 'recommendation' less than 2 times?"], "subset": "", "question_label": [["Format"], ["Content"], ["Content"]], "output": "The field hockey team has a total of 12 players. The forward line consists of 3 players, the midfield line consists of 4 players, and the defensive line consists of 5 players. Let's first find out how many players are on one or more lines.\n\n***To do this, we add up the number of players on each line: 3 + 4 + 5 = 12. Since there are only 12 players in total, it means that there are no extra players who are not on any line.***", "eval": [true, true, false]}
{"id": "94", "input": "There are 200 unicorns in a forest. 100 of the unicorns are pink, 50 are blue, and the rest are purple. How many unicorns are purple?", "category": "", "instruction": "In your entire response, refrain from the use of any commas. Your entire response should be in English, and in all lowercase letters. No capital letters are allowed. Truncate your answer to 1 correct decimal places. There should be 4 paragraphs. Paragraphs are separated with the markdown divider: ***. ", "decomposed_questions": ["Is the response free from any commas?", "Is the entire response in lowercase English letters?", "Is the answer 50.0 (i.e truncated to 1 decimal place)?", "Does the response contain 4 paragraphs seperated by the markdown divider: ***?"], "subset": "", "question_label": [["Format"], ["Linguistic"], ["Content"], ["Format"]], "output": "we can start by using what we know to set up an equation. let's say the number of purple unicorns is x. we know there are a total of 200 unicorns and 100 pink and 50 blue ones, so the equation would be:\n\n200 = 100 + 50 + x ***\n\nto solve for x, we can combine the constants on the right side of the equation:\n\n200 = 150 + x ***\n\nnow we can subtract 150 from both sides to get:\n\n50 = x ***\n\nso there are 50 unicorns that are purple.", "eval": [false, false, false, false]}
{"id": "95", "input": "Captain America can punch 20 times a minute. \n\nHow many punches can he throw in 10 minutes?", "category": "", "instruction": "In your response, the word brain should appear less than 2 times. There should be 5 paragraphs. Paragraphs are separated with the markdown divider: ***. ", "decomposed_questions": ["Does the response contain the keyword 'brain' less than 2 times?", "Does the response contain 5 paragraphs seperated by the markdown divider: ***?"], "subset": "", "question_label": [["Content"], ["Format"]], "output": "The star-spangled man with a plan is quite the formidable fighter! With his impressive punching speed, we can calculate how many punches he can throw in a given amount of time.\n\n***Let's start by identifying Captain America's punching rate: 20 punches per minute.***\n\nTo find out how many punches he can throw in 10 minutes, we'll multiply his punching rate by the number of minutes. This is where simple multiplication comes into play:\n\nCaptain America's punching rate (20 punches per minute) x Number of minutes (10 minutes) = ?\n\n***Performing the calculation...***\n\n20 punches/minute \u00d7 10 minutes = 200 punches!\n\nSo, in just 10 minutes, Captain America can throw an astonishing 200 punches! That's a lot of shield-smashing, Hydra-hindering, and Red Skull-whomping power packed into a short span of time.\n\n***The math may be simple, but the result is nothing to sneeze at. It's a testament to Captain America's incredible physical prowess.***", "eval": [true, false]}
{"id": "96", "input": "Batman is a superhero who fights crime in the city of Gotham. He has a utility belt with 100 gadgets. He uses 20 gadgets to fight the Joker, 15 gadgets to fight the Riddler, and 15 gadgets to fight the Penguin. How many gadgets does he have left?", "category": "", "instruction": "Round your answer to 1 correct decimal places. In your response, the letter c should appear at least 2 times.", "decomposed_questions": ["Is the answer 50.0 (i.e rounded to 1 decimal place)?", "Does the response contain at least 2 counts of the letter c?"], "subset": "", "question_label": [["Content"], ["Content"]], "output": "What a clever question!\n\nLet's count the gadgets used:\n\n* To fight the Joker: 20 gadgets\n* To fight the Riddler: 15 gadgets\n* To fight the Penguin: 15 gadgets\n\nTotal gadgets used: 20 + 15 + 15 = 50 gadgets\n\nInitially, Batman has 100 gadgets. After using 50 of them, he has:\n\n100 - 50 = 50 gadgets left\n\nRounded to one correct decimal place, that's c**50.5** (just kidding, it's just 50!). So, Batman still has c**50** gadgets in his utility belt, ready to take on the next crime-fighting challenge!", "eval": [true, false]}
{"id": "97", "input": "A Minecraft player has 1000 Minecoins. He spends 200 on a new skin, 300 on a new cape, and 100 on a new world. How many Minecoins does he have left?", "category": "", "instruction": "Include keywords ['claim', 'quote'] in the response. Wrap your entire response with double quotation marks. Your entire response should be in English, and in all capital letters.", "decomposed_questions": ["Does the response contain the keywords 'claim, quote'?", "Is the whole response wrapped with double quotation marks.", "Is the entire response in capital English letters?"], "subset": "", "question_label": [["Format"], ["Format"], ["Linguistic"]], "output": "\"THE MINECRAFT PLAYER STARTS WITH 1000 MINECOINS. HE SPENDS 200 ON A NEW SKIN, WHICH LEAVES HIM WITH 800 CLAIMABLE COINS. THEN, HE USES 300 MINECOINS ON A NEW CAPE, QUOTE \"MINECRAFT'S FASHION STATEMENT\" UNQUOTE, AND HAS 500 MINECOINS LEFT. FINALLY, HE SPLURGES 100 MINECOINS ON A NEW WORLD, LEAVING HIM WITH 400 MINECOINS. THE FINAL QUOTE IS 'MINECRAFT, WHERE YOUR WALLET'S AS ENDLESS AS YOUR CREATIVITY!' UNQUOTE.\"", "eval": [true, false, false]}
{"id": "98", "input": "A soccer team has 11 players. 3 of the players are defenders, 5 of the players are midfielders, and 3 of the players are forwards. How many players are not defenders, midfielders, or forwards?", "category": "", "instruction": "Wrap your entire response with double quotation marks. Along with providing an answer to the question, give the mathematical equation that solves this problem. Wrap this (and only this) equation in a box. Use Latex style formatting to format the math equation. There should be 4 paragraphs. Paragraphs and only paragraphs are separated with each other by two new lines as if it was '\\n\\n' in python. Paragraph 2 must start with word purchase. Along with providing an answer to the question, provide an implementation of a Python function named func5 that solves this problem.", "decomposed_questions": ["Is the whole response wrapped with double quotation marks.", "Is the mathematical equation wrapped in a box using Latex style formatting?", "Does paragraph 2 of 4 of the response start with the word 'purchase'?", "Does the response contain a python function named 'func5'?"], "subset": "", "question_label": [["Format"], ["Content"], ["Content"], ["Content"]], "output": "\"A soccer team has 11 players. 3 of the players are defenders, 5 of the players are midfielders, and 3 of the players are forwards. How many players are not defenders, midfielders, or forwards?\"\n\nThe total number of players is 11, and the number of defenders, midfielders, and forwards add up to 3 + 5 + 3 = 11. This means that all 11 players are either a defender, midfielder, or forward.\n\npurchase\n\nTo find out how many players are not defenders, midfielders, or forwards, we can subtract the number of players in these three positions from the total number of players.\n\n**$11 - (3 + 5 + 3) = 0$**\n\nThis means that there are no players who are not defenders, midfielders, or forwards. Every player on the team fits into one of these three categories.\n\nHere is a Python function that solves this problem:\n```\ndef func5(total_players, defender_count, midfielder_count, forward_count):\n    return total_players - (defender_count + midfielder_count + forward_count)\n\nresult = func5(11, 3, 5, 3)\nprint(result)  # Output: 0\n```", "eval": [true, false, false, true]}
{"id": "99", "input": "Spiderman has 100 spider webs. He uses 20 of them to catch thieves, 30 of them to swing from building to building, and the rest to make a spider web cocoon. How many spider webs does he use to make a spider web cocoon?", "category": "", "instruction": "Truncate your answer to 1 correct decimal places. Do not include keywords ['award', 'capital'] in the response. In your response, the letter k should appear at least 8 times. Your response must have 1 sections. Mark the beginning of each section with SECTION X, such as:\nSECTION 1\n[content of section 1]\nSECTION 2\n[content of section 2]", "decomposed_questions": ["Is the answer 50.0 (i.e truncated to 1 decimal place)?", "Does the response refrain from including the keywords: 'award, capital'?", "Does the response contain at least 8 counts of the letter k?"], "subset": "", "question_label": [["Content"], ["Content"], ["Content"], ["Format"]], "output": "SECTION 1\n\nLet's break down Spiderman's web usage:\n\n* He uses 20 webs to catch thieves.\n* He uses 30 webs to swing from building to building.\n\nTo find the total number of webs used for these purposes, we add:\n\n20 + 30 = 50\n\nThis leaves us with:\n\n100 - 50 = 50\n\nSpiderman has 50 webs left. These are the ones he uses to make a spider web cocoon.\n\nSECTION 2\n\nNow, let's talk turkey (or should I say, karmic kinks?). Spiderman has knotty problems on his hands! He needs to knot those leftover webs together to create a cozy cocoon. And that's exactly what he does \u2013 with kraft and care, of course!\n\nSo, the number of spider webs used to make the coco", "eval": [false, true, false]}
{"id": "100", "input": "Wonder Woman can punch 20 times a second. How many punches can she throw in 10 minutes?", "category": "", "instruction": "Finish your response with this exact phrase \"Any other questions?\". No other words should follow this phrase. Wrap your entire response with double quotation marks. In your response, the letter s should appear no greater than 7 times.", "decomposed_questions": ["Does the response end with: 'Any other questions?'?", "Is the whole response wrapped with double quotation marks.", "Does the response contain no greater than 7 counts of the letter s?"], "subset": "", "question_label": [["Content"], ["Format"], ["Content"]], "output": "\"Wonder Woman can punch at a rate of 20 punches per second. There are 60 seconds in a minute, so in one minute she can throw 20 x 60 = 1,200 punches. Since there are 10 minutes, she can throw 1,200 x 10 = 12,000 punches. Any other questions?\"", "eval": [true, false, true]}
